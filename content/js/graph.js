/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 35.0, "minX": 0.0, "maxY": 7111.0, "series": [{"data": [[0.0, 173.0], [0.1, 173.0], [0.2, 173.0], [0.3, 173.0], [0.4, 173.0], [0.5, 198.0], [0.6, 198.0], [0.7, 198.0], [0.8, 198.0], [0.9, 198.0], [1.0, 286.0], [1.1, 286.0], [1.2, 286.0], [1.3, 286.0], [1.4, 286.0], [1.5, 315.0], [1.6, 315.0], [1.7, 315.0], [1.8, 315.0], [1.9, 315.0], [2.0, 375.0], [2.1, 375.0], [2.2, 375.0], [2.3, 375.0], [2.4, 375.0], [2.5, 543.0], [2.6, 543.0], [2.7, 543.0], [2.8, 543.0], [2.9, 543.0], [3.0, 554.0], [3.1, 554.0], [3.2, 554.0], [3.3, 554.0], [3.4, 554.0], [3.5, 574.0], [3.6, 574.0], [3.7, 574.0], [3.8, 574.0], [3.9, 574.0], [4.0, 584.0], [4.1, 584.0], [4.2, 584.0], [4.3, 584.0], [4.4, 584.0], [4.5, 588.0], [4.6, 588.0], [4.7, 588.0], [4.8, 588.0], [4.9, 588.0], [5.0, 589.0], [5.1, 589.0], [5.2, 589.0], [5.3, 589.0], [5.4, 589.0], [5.5, 598.0], [5.6, 598.0], [5.7, 598.0], [5.8, 598.0], [5.9, 598.0], [6.0, 612.0], [6.1, 612.0], [6.2, 612.0], [6.3, 612.0], [6.4, 612.0], [6.5, 628.0], [6.6, 628.0], [6.7, 628.0], [6.8, 628.0], [6.9, 628.0], [7.0, 630.0], [7.1, 630.0], [7.2, 630.0], [7.3, 630.0], [7.4, 630.0], [7.5, 635.0], [7.6, 635.0], [7.7, 635.0], [7.8, 635.0], [7.9, 635.0], [8.0, 637.0], [8.1, 637.0], [8.2, 637.0], [8.3, 637.0], [8.4, 637.0], [8.5, 668.0], [8.6, 668.0], [8.7, 668.0], [8.8, 668.0], [8.9, 668.0], [9.0, 669.0], [9.1, 669.0], [9.2, 669.0], [9.3, 669.0], [9.4, 669.0], [9.5, 677.0], [9.6, 677.0], [9.7, 677.0], [9.8, 677.0], [9.9, 677.0], [10.0, 699.0], [10.1, 699.0], [10.2, 699.0], [10.3, 699.0], [10.4, 699.0], [10.5, 705.0], [10.6, 705.0], [10.7, 705.0], [10.8, 705.0], [10.9, 705.0], [11.0, 713.0], [11.1, 713.0], [11.2, 713.0], [11.3, 713.0], [11.4, 713.0], [11.5, 722.0], [11.6, 722.0], [11.7, 722.0], [11.8, 722.0], [11.9, 722.0], [12.0, 744.0], [12.1, 744.0], [12.2, 744.0], [12.3, 744.0], [12.4, 744.0], [12.5, 750.0], [12.6, 750.0], [12.7, 750.0], [12.8, 750.0], [12.9, 750.0], [13.0, 755.0], [13.1, 755.0], [13.2, 755.0], [13.3, 755.0], [13.4, 755.0], [13.5, 766.0], [13.6, 766.0], [13.7, 766.0], [13.8, 766.0], [13.9, 766.0], [14.0, 766.0], [14.1, 766.0], [14.2, 766.0], [14.3, 766.0], [14.4, 766.0], [14.5, 769.0], [14.6, 769.0], [14.7, 769.0], [14.8, 769.0], [14.9, 769.0], [15.0, 776.0], [15.1, 776.0], [15.2, 776.0], [15.3, 776.0], [15.4, 776.0], [15.5, 782.0], [15.6, 782.0], [15.7, 782.0], [15.8, 782.0], [15.9, 782.0], [16.0, 830.0], [16.1, 830.0], [16.2, 830.0], [16.3, 830.0], [16.4, 830.0], [16.5, 836.0], [16.6, 836.0], [16.7, 836.0], [16.8, 836.0], [16.9, 836.0], [17.0, 857.0], [17.1, 857.0], [17.2, 857.0], [17.3, 857.0], [17.4, 857.0], [17.5, 921.0], [17.6, 921.0], [17.7, 921.0], [17.8, 921.0], [17.9, 921.0], [18.0, 966.0], [18.1, 966.0], [18.2, 966.0], [18.3, 966.0], [18.4, 966.0], [18.5, 984.0], [18.6, 984.0], [18.7, 984.0], [18.8, 984.0], [18.9, 984.0], [19.0, 987.0], [19.1, 987.0], [19.2, 987.0], [19.3, 987.0], [19.4, 987.0], [19.5, 1011.0], [19.6, 1011.0], [19.7, 1011.0], [19.8, 1011.0], [19.9, 1011.0], [20.0, 1051.0], [20.1, 1051.0], [20.2, 1051.0], [20.3, 1051.0], [20.4, 1051.0], [20.5, 1084.0], [20.6, 1084.0], [20.7, 1084.0], [20.8, 1084.0], [20.9, 1084.0], [21.0, 1105.0], [21.1, 1105.0], [21.2, 1105.0], [21.3, 1105.0], [21.4, 1105.0], [21.5, 1109.0], [21.6, 1109.0], [21.7, 1109.0], [21.8, 1109.0], [21.9, 1109.0], [22.0, 1119.0], [22.1, 1119.0], [22.2, 1119.0], [22.3, 1119.0], [22.4, 1119.0], [22.5, 1135.0], [22.6, 1135.0], [22.7, 1135.0], [22.8, 1135.0], [22.9, 1135.0], [23.0, 1149.0], [23.1, 1149.0], [23.2, 1149.0], [23.3, 1149.0], [23.4, 1149.0], [23.5, 1180.0], [23.6, 1180.0], [23.7, 1180.0], [23.8, 1180.0], [23.9, 1180.0], [24.0, 1205.0], [24.1, 1205.0], [24.2, 1205.0], [24.3, 1205.0], [24.4, 1205.0], [24.5, 1214.0], [24.6, 1214.0], [24.7, 1214.0], [24.8, 1214.0], [24.9, 1214.0], [25.0, 1251.0], [25.1, 1251.0], [25.2, 1251.0], [25.3, 1251.0], [25.4, 1251.0], [25.5, 1272.0], [25.6, 1272.0], [25.7, 1272.0], [25.8, 1272.0], [25.9, 1272.0], [26.0, 1276.0], [26.1, 1276.0], [26.2, 1276.0], [26.3, 1276.0], [26.4, 1276.0], [26.5, 1303.0], [26.6, 1303.0], [26.7, 1303.0], [26.8, 1303.0], [26.9, 1303.0], [27.0, 1313.0], [27.1, 1313.0], [27.2, 1313.0], [27.3, 1313.0], [27.4, 1313.0], [27.5, 1345.0], [27.6, 1345.0], [27.7, 1345.0], [27.8, 1345.0], [27.9, 1345.0], [28.0, 1361.0], [28.1, 1361.0], [28.2, 1361.0], [28.3, 1361.0], [28.4, 1361.0], [28.5, 1369.0], [28.6, 1369.0], [28.7, 1369.0], [28.8, 1369.0], [28.9, 1369.0], [29.0, 1426.0], [29.1, 1426.0], [29.2, 1426.0], [29.3, 1426.0], [29.4, 1426.0], [29.5, 1449.0], [29.6, 1449.0], [29.7, 1449.0], [29.8, 1449.0], [29.9, 1449.0], [30.0, 1491.0], [30.1, 1491.0], [30.2, 1491.0], [30.3, 1491.0], [30.4, 1491.0], [30.5, 1492.0], [30.6, 1492.0], [30.7, 1492.0], [30.8, 1492.0], [30.9, 1492.0], [31.0, 1506.0], [31.1, 1506.0], [31.2, 1506.0], [31.3, 1506.0], [31.4, 1506.0], [31.5, 1516.0], [31.6, 1516.0], [31.7, 1516.0], [31.8, 1516.0], [31.9, 1516.0], [32.0, 1523.0], [32.1, 1523.0], [32.2, 1523.0], [32.3, 1523.0], [32.4, 1523.0], [32.5, 1527.0], [32.6, 1527.0], [32.7, 1527.0], [32.8, 1527.0], [32.9, 1527.0], [33.0, 1527.0], [33.1, 1527.0], [33.2, 1527.0], [33.3, 1527.0], [33.4, 1527.0], [33.5, 1545.0], [33.6, 1545.0], [33.7, 1545.0], [33.8, 1545.0], [33.9, 1545.0], [34.0, 1552.0], [34.1, 1552.0], [34.2, 1552.0], [34.3, 1552.0], [34.4, 1552.0], [34.5, 1566.0], [34.6, 1566.0], [34.7, 1566.0], [34.8, 1566.0], [34.9, 1566.0], [35.0, 1666.0], [35.1, 1666.0], [35.2, 1666.0], [35.3, 1666.0], [35.4, 1666.0], [35.5, 1667.0], [35.6, 1667.0], [35.7, 1667.0], [35.8, 1667.0], [35.9, 1667.0], [36.0, 1676.0], [36.1, 1676.0], [36.2, 1676.0], [36.3, 1676.0], [36.4, 1676.0], [36.5, 1699.0], [36.6, 1699.0], [36.7, 1699.0], [36.8, 1699.0], [36.9, 1699.0], [37.0, 1701.0], [37.1, 1701.0], [37.2, 1701.0], [37.3, 1701.0], [37.4, 1701.0], [37.5, 1726.0], [37.6, 1726.0], [37.7, 1726.0], [37.8, 1726.0], [37.9, 1726.0], [38.0, 1727.0], [38.1, 1727.0], [38.2, 1727.0], [38.3, 1727.0], [38.4, 1727.0], [38.5, 1736.0], [38.6, 1736.0], [38.7, 1736.0], [38.8, 1736.0], [38.9, 1736.0], [39.0, 1744.0], [39.1, 1744.0], [39.2, 1744.0], [39.3, 1744.0], [39.4, 1744.0], [39.5, 1750.0], [39.6, 1750.0], [39.7, 1750.0], [39.8, 1750.0], [39.9, 1750.0], [40.0, 1757.0], [40.1, 1757.0], [40.2, 1757.0], [40.3, 1757.0], [40.4, 1757.0], [40.5, 1767.0], [40.6, 1767.0], [40.7, 1767.0], [40.8, 1767.0], [40.9, 1767.0], [41.0, 1773.0], [41.1, 1773.0], [41.2, 1773.0], [41.3, 1773.0], [41.4, 1773.0], [41.5, 1774.0], [41.6, 1774.0], [41.7, 1774.0], [41.8, 1774.0], [41.9, 1774.0], [42.0, 1792.0], [42.1, 1792.0], [42.2, 1792.0], [42.3, 1792.0], [42.4, 1792.0], [42.5, 1819.0], [42.6, 1819.0], [42.7, 1819.0], [42.8, 1819.0], [42.9, 1819.0], [43.0, 1819.0], [43.1, 1819.0], [43.2, 1819.0], [43.3, 1819.0], [43.4, 1819.0], [43.5, 1830.0], [43.6, 1830.0], [43.7, 1830.0], [43.8, 1830.0], [43.9, 1830.0], [44.0, 1832.0], [44.1, 1832.0], [44.2, 1832.0], [44.3, 1832.0], [44.4, 1832.0], [44.5, 1835.0], [44.6, 1835.0], [44.7, 1835.0], [44.8, 1835.0], [44.9, 1835.0], [45.0, 1840.0], [45.1, 1840.0], [45.2, 1840.0], [45.3, 1840.0], [45.4, 1840.0], [45.5, 1843.0], [45.6, 1843.0], [45.7, 1843.0], [45.8, 1843.0], [45.9, 1843.0], [46.0, 1847.0], [46.1, 1847.0], [46.2, 1847.0], [46.3, 1847.0], [46.4, 1847.0], [46.5, 1853.0], [46.6, 1853.0], [46.7, 1853.0], [46.8, 1853.0], [46.9, 1853.0], [47.0, 1856.0], [47.1, 1856.0], [47.2, 1856.0], [47.3, 1856.0], [47.4, 1856.0], [47.5, 1858.0], [47.6, 1858.0], [47.7, 1858.0], [47.8, 1858.0], [47.9, 1858.0], [48.0, 1864.0], [48.1, 1864.0], [48.2, 1864.0], [48.3, 1864.0], [48.4, 1864.0], [48.5, 1894.0], [48.6, 1894.0], [48.7, 1894.0], [48.8, 1894.0], [48.9, 1894.0], [49.0, 1896.0], [49.1, 1896.0], [49.2, 1896.0], [49.3, 1896.0], [49.4, 1896.0], [49.5, 1899.0], [49.6, 1899.0], [49.7, 1899.0], [49.8, 1899.0], [49.9, 1899.0], [50.0, 1905.0], [50.1, 1905.0], [50.2, 1905.0], [50.3, 1905.0], [50.4, 1905.0], [50.5, 1911.0], [50.6, 1911.0], [50.7, 1911.0], [50.8, 1911.0], [50.9, 1911.0], [51.0, 1922.0], [51.1, 1922.0], [51.2, 1922.0], [51.3, 1922.0], [51.4, 1922.0], [51.5, 1923.0], [51.6, 1923.0], [51.7, 1923.0], [51.8, 1923.0], [51.9, 1923.0], [52.0, 1928.0], [52.1, 1928.0], [52.2, 1928.0], [52.3, 1928.0], [52.4, 1928.0], [52.5, 1930.0], [52.6, 1930.0], [52.7, 1930.0], [52.8, 1930.0], [52.9, 1930.0], [53.0, 1932.0], [53.1, 1932.0], [53.2, 1932.0], [53.3, 1932.0], [53.4, 1932.0], [53.5, 1938.0], [53.6, 1938.0], [53.7, 1938.0], [53.8, 1938.0], [53.9, 1938.0], [54.0, 1938.0], [54.1, 1938.0], [54.2, 1938.0], [54.3, 1938.0], [54.4, 1938.0], [54.5, 1942.0], [54.6, 1942.0], [54.7, 1942.0], [54.8, 1942.0], [54.9, 1942.0], [55.0, 1945.0], [55.1, 1945.0], [55.2, 1945.0], [55.3, 1945.0], [55.4, 1945.0], [55.5, 1945.0], [55.6, 1945.0], [55.7, 1945.0], [55.8, 1945.0], [55.9, 1945.0], [56.0, 1946.0], [56.1, 1946.0], [56.2, 1946.0], [56.3, 1946.0], [56.4, 1946.0], [56.5, 1952.0], [56.6, 1952.0], [56.7, 1952.0], [56.8, 1952.0], [56.9, 1952.0], [57.0, 1953.0], [57.1, 1953.0], [57.2, 1953.0], [57.3, 1953.0], [57.4, 1953.0], [57.5, 1954.0], [57.6, 1954.0], [57.7, 1954.0], [57.8, 1954.0], [57.9, 1954.0], [58.0, 1960.0], [58.1, 1960.0], [58.2, 1960.0], [58.3, 1960.0], [58.4, 1960.0], [58.5, 1969.0], [58.6, 1969.0], [58.7, 1969.0], [58.8, 1969.0], [58.9, 1969.0], [59.0, 1969.0], [59.1, 1969.0], [59.2, 1969.0], [59.3, 1969.0], [59.4, 1969.0], [59.5, 1970.0], [59.6, 1970.0], [59.7, 1970.0], [59.8, 1970.0], [59.9, 1970.0], [60.0, 1976.0], [60.1, 1976.0], [60.2, 1976.0], [60.3, 1976.0], [60.4, 1976.0], [60.5, 1983.0], [60.6, 1983.0], [60.7, 1983.0], [60.8, 1983.0], [60.9, 1983.0], [61.0, 1986.0], [61.1, 1986.0], [61.2, 1986.0], [61.3, 1986.0], [61.4, 1986.0], [61.5, 1995.0], [61.6, 1995.0], [61.7, 1995.0], [61.8, 1995.0], [61.9, 1995.0], [62.0, 2004.0], [62.1, 2004.0], [62.2, 2004.0], [62.3, 2004.0], [62.4, 2004.0], [62.5, 2006.0], [62.6, 2006.0], [62.7, 2006.0], [62.8, 2006.0], [62.9, 2006.0], [63.0, 2014.0], [63.1, 2014.0], [63.2, 2014.0], [63.3, 2014.0], [63.4, 2014.0], [63.5, 2019.0], [63.6, 2019.0], [63.7, 2019.0], [63.8, 2019.0], [63.9, 2019.0], [64.0, 2021.0], [64.1, 2021.0], [64.2, 2021.0], [64.3, 2021.0], [64.4, 2021.0], [64.5, 2030.0], [64.6, 2030.0], [64.7, 2030.0], [64.8, 2030.0], [64.9, 2030.0], [65.0, 2039.0], [65.1, 2039.0], [65.2, 2039.0], [65.3, 2039.0], [65.4, 2039.0], [65.5, 2042.0], [65.6, 2042.0], [65.7, 2042.0], [65.8, 2042.0], [65.9, 2042.0], [66.0, 2045.0], [66.1, 2045.0], [66.2, 2045.0], [66.3, 2045.0], [66.4, 2045.0], [66.5, 2071.0], [66.6, 2071.0], [66.7, 2071.0], [66.8, 2071.0], [66.9, 2071.0], [67.0, 2079.0], [67.1, 2079.0], [67.2, 2079.0], [67.3, 2079.0], [67.4, 2079.0], [67.5, 2081.0], [67.6, 2081.0], [67.7, 2081.0], [67.8, 2081.0], [67.9, 2081.0], [68.0, 2088.0], [68.1, 2088.0], [68.2, 2088.0], [68.3, 2088.0], [68.4, 2088.0], [68.5, 2105.0], [68.6, 2105.0], [68.7, 2105.0], [68.8, 2105.0], [68.9, 2105.0], [69.0, 2108.0], [69.1, 2108.0], [69.2, 2108.0], [69.3, 2108.0], [69.4, 2108.0], [69.5, 2120.0], [69.6, 2120.0], [69.7, 2120.0], [69.8, 2120.0], [69.9, 2120.0], [70.0, 2130.0], [70.1, 2130.0], [70.2, 2130.0], [70.3, 2130.0], [70.4, 2130.0], [70.5, 2133.0], [70.6, 2133.0], [70.7, 2133.0], [70.8, 2133.0], [70.9, 2133.0], [71.0, 2154.0], [71.1, 2154.0], [71.2, 2154.0], [71.3, 2154.0], [71.4, 2154.0], [71.5, 2176.0], [71.6, 2176.0], [71.7, 2176.0], [71.8, 2176.0], [71.9, 2176.0], [72.0, 2199.0], [72.1, 2199.0], [72.2, 2199.0], [72.3, 2199.0], [72.4, 2199.0], [72.5, 2203.0], [72.6, 2203.0], [72.7, 2203.0], [72.8, 2203.0], [72.9, 2203.0], [73.0, 2226.0], [73.1, 2226.0], [73.2, 2226.0], [73.3, 2226.0], [73.4, 2226.0], [73.5, 2255.0], [73.6, 2255.0], [73.7, 2255.0], [73.8, 2255.0], [73.9, 2255.0], [74.0, 2275.0], [74.1, 2275.0], [74.2, 2275.0], [74.3, 2275.0], [74.4, 2275.0], [74.5, 2292.0], [74.6, 2292.0], [74.7, 2292.0], [74.8, 2292.0], [74.9, 2292.0], [75.0, 2300.0], [75.1, 2300.0], [75.2, 2300.0], [75.3, 2300.0], [75.4, 2300.0], [75.5, 2312.0], [75.6, 2312.0], [75.7, 2312.0], [75.8, 2312.0], [75.9, 2312.0], [76.0, 2328.0], [76.1, 2328.0], [76.2, 2328.0], [76.3, 2328.0], [76.4, 2328.0], [76.5, 2341.0], [76.6, 2341.0], [76.7, 2341.0], [76.8, 2341.0], [76.9, 2341.0], [77.0, 2350.0], [77.1, 2350.0], [77.2, 2350.0], [77.3, 2350.0], [77.4, 2350.0], [77.5, 2364.0], [77.6, 2364.0], [77.7, 2364.0], [77.8, 2364.0], [77.9, 2364.0], [78.0, 2367.0], [78.1, 2367.0], [78.2, 2367.0], [78.3, 2367.0], [78.4, 2367.0], [78.5, 2367.0], [78.6, 2367.0], [78.7, 2367.0], [78.8, 2367.0], [78.9, 2367.0], [79.0, 2367.0], [79.1, 2367.0], [79.2, 2367.0], [79.3, 2367.0], [79.4, 2367.0], [79.5, 2386.0], [79.6, 2386.0], [79.7, 2386.0], [79.8, 2386.0], [79.9, 2386.0], [80.0, 2399.0], [80.1, 2399.0], [80.2, 2399.0], [80.3, 2399.0], [80.4, 2399.0], [80.5, 2410.0], [80.6, 2410.0], [80.7, 2410.0], [80.8, 2410.0], [80.9, 2410.0], [81.0, 2412.0], [81.1, 2412.0], [81.2, 2412.0], [81.3, 2412.0], [81.4, 2412.0], [81.5, 2429.0], [81.6, 2429.0], [81.7, 2429.0], [81.8, 2429.0], [81.9, 2429.0], [82.0, 2435.0], [82.1, 2435.0], [82.2, 2435.0], [82.3, 2435.0], [82.4, 2435.0], [82.5, 2438.0], [82.6, 2438.0], [82.7, 2438.0], [82.8, 2438.0], [82.9, 2438.0], [83.0, 2485.0], [83.1, 2485.0], [83.2, 2485.0], [83.3, 2485.0], [83.4, 2485.0], [83.5, 2492.0], [83.6, 2492.0], [83.7, 2492.0], [83.8, 2492.0], [83.9, 2492.0], [84.0, 2511.0], [84.1, 2511.0], [84.2, 2511.0], [84.3, 2511.0], [84.4, 2511.0], [84.5, 2513.0], [84.6, 2513.0], [84.7, 2513.0], [84.8, 2513.0], [84.9, 2513.0], [85.0, 2516.0], [85.1, 2516.0], [85.2, 2516.0], [85.3, 2516.0], [85.4, 2516.0], [85.5, 2519.0], [85.6, 2519.0], [85.7, 2519.0], [85.8, 2519.0], [85.9, 2519.0], [86.0, 2524.0], [86.1, 2524.0], [86.2, 2524.0], [86.3, 2524.0], [86.4, 2524.0], [86.5, 2526.0], [86.6, 2526.0], [86.7, 2526.0], [86.8, 2526.0], [86.9, 2526.0], [87.0, 2535.0], [87.1, 2535.0], [87.2, 2535.0], [87.3, 2535.0], [87.4, 2535.0], [87.5, 2547.0], [87.6, 2547.0], [87.7, 2547.0], [87.8, 2547.0], [87.9, 2547.0], [88.0, 2560.0], [88.1, 2560.0], [88.2, 2560.0], [88.3, 2560.0], [88.4, 2560.0], [88.5, 2583.0], [88.6, 2583.0], [88.7, 2583.0], [88.8, 2583.0], [88.9, 2583.0], [89.0, 2586.0], [89.1, 2586.0], [89.2, 2586.0], [89.3, 2586.0], [89.4, 2586.0], [89.5, 2594.0], [89.6, 2594.0], [89.7, 2594.0], [89.8, 2594.0], [89.9, 2594.0], [90.0, 2595.0], [90.1, 2595.0], [90.2, 2595.0], [90.3, 2595.0], [90.4, 2595.0], [90.5, 2597.0], [90.6, 2597.0], [90.7, 2597.0], [90.8, 2597.0], [90.9, 2597.0], [91.0, 2605.0], [91.1, 2605.0], [91.2, 2605.0], [91.3, 2605.0], [91.4, 2605.0], [91.5, 2611.0], [91.6, 2611.0], [91.7, 2611.0], [91.8, 2611.0], [91.9, 2611.0], [92.0, 2614.0], [92.1, 2614.0], [92.2, 2614.0], [92.3, 2614.0], [92.4, 2614.0], [92.5, 2629.0], [92.6, 2629.0], [92.7, 2629.0], [92.8, 2629.0], [92.9, 2629.0], [93.0, 2638.0], [93.1, 2638.0], [93.2, 2638.0], [93.3, 2638.0], [93.4, 2638.0], [93.5, 2646.0], [93.6, 2646.0], [93.7, 2646.0], [93.8, 2646.0], [93.9, 2646.0], [94.0, 2658.0], [94.1, 2658.0], [94.2, 2658.0], [94.3, 2658.0], [94.4, 2658.0], [94.5, 2703.0], [94.6, 2703.0], [94.7, 2703.0], [94.8, 2703.0], [94.9, 2703.0], [95.0, 2754.0], [95.1, 2754.0], [95.2, 2754.0], [95.3, 2754.0], [95.4, 2754.0], [95.5, 2757.0], [95.6, 2757.0], [95.7, 2757.0], [95.8, 2757.0], [95.9, 2757.0], [96.0, 2862.0], [96.1, 2862.0], [96.2, 2862.0], [96.3, 2862.0], [96.4, 2862.0], [96.5, 2888.0], [96.6, 2888.0], [96.7, 2888.0], [96.8, 2888.0], [96.9, 2888.0], [97.0, 3497.0], [97.1, 3497.0], [97.2, 3497.0], [97.3, 3497.0], [97.4, 3497.0], [97.5, 3878.0], [97.6, 3878.0], [97.7, 3878.0], [97.8, 3878.0], [97.9, 3878.0], [98.0, 4086.0], [98.1, 4086.0], [98.2, 4086.0], [98.3, 4086.0], [98.4, 4086.0], [98.5, 4090.0], [98.6, 4090.0], [98.7, 4090.0], [98.8, 4090.0], [98.9, 4090.0], [99.0, 4220.0], [99.1, 4220.0], [99.2, 4220.0], [99.3, 4220.0], [99.4, 4220.0], [99.5, 4760.0], [99.6, 4760.0], [99.7, 4760.0], [99.8, 4760.0], [99.9, 4760.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 35.0], [0.1, 35.0], [0.2, 35.0], [0.3, 35.0], [0.4, 35.0], [0.5, 44.0], [0.6, 44.0], [0.7, 44.0], [0.8, 44.0], [0.9, 44.0], [1.0, 49.0], [1.1, 49.0], [1.2, 49.0], [1.3, 49.0], [1.4, 49.0], [1.5, 71.0], [1.6, 71.0], [1.7, 71.0], [1.8, 71.0], [1.9, 71.0], [2.0, 77.0], [2.1, 77.0], [2.2, 77.0], [2.3, 77.0], [2.4, 77.0], [2.5, 95.0], [2.6, 95.0], [2.7, 95.0], [2.8, 95.0], [2.9, 95.0], [3.0, 2398.0], [3.1, 2398.0], [3.2, 2398.0], [3.3, 2398.0], [3.4, 2398.0], [3.5, 2399.0], [3.6, 2399.0], [3.7, 2399.0], [3.8, 2399.0], [3.9, 2399.0], [4.0, 2442.0], [4.1, 2442.0], [4.2, 2442.0], [4.3, 2442.0], [4.4, 2442.0], [4.5, 2534.0], [4.6, 2534.0], [4.7, 2534.0], [4.8, 2534.0], [4.9, 2534.0], [5.0, 2678.0], [5.1, 2678.0], [5.2, 2678.0], [5.3, 2678.0], [5.4, 2678.0], [5.5, 2685.0], [5.6, 2685.0], [5.7, 2685.0], [5.8, 2685.0], [5.9, 2685.0], [6.0, 2705.0], [6.1, 2705.0], [6.2, 2705.0], [6.3, 2705.0], [6.4, 2705.0], [6.5, 2773.0], [6.6, 2773.0], [6.7, 2773.0], [6.8, 2773.0], [6.9, 2773.0], [7.0, 2775.0], [7.1, 2775.0], [7.2, 2775.0], [7.3, 2775.0], [7.4, 2775.0], [7.5, 2802.0], [7.6, 2802.0], [7.7, 2802.0], [7.8, 2802.0], [7.9, 2802.0], [8.0, 2807.0], [8.1, 2807.0], [8.2, 2807.0], [8.3, 2807.0], [8.4, 2807.0], [8.5, 2874.0], [8.6, 2874.0], [8.7, 2874.0], [8.8, 2874.0], [8.9, 2874.0], [9.0, 2875.0], [9.1, 2875.0], [9.2, 2875.0], [9.3, 2875.0], [9.4, 2875.0], [9.5, 2900.0], [9.6, 2900.0], [9.7, 2900.0], [9.8, 2900.0], [9.9, 2900.0], [10.0, 2905.0], [10.1, 2905.0], [10.2, 2905.0], [10.3, 2905.0], [10.4, 2905.0], [10.5, 2907.0], [10.6, 2907.0], [10.7, 2907.0], [10.8, 2907.0], [10.9, 2907.0], [11.0, 2918.0], [11.1, 2918.0], [11.2, 2918.0], [11.3, 2918.0], [11.4, 2918.0], [11.5, 3017.0], [11.6, 3017.0], [11.7, 3017.0], [11.8, 3017.0], [11.9, 3017.0], [12.0, 3059.0], [12.1, 3059.0], [12.2, 3059.0], [12.3, 3059.0], [12.4, 3059.0], [12.5, 3092.0], [12.6, 3092.0], [12.7, 3092.0], [12.8, 3092.0], [12.9, 3092.0], [13.0, 3123.0], [13.1, 3123.0], [13.2, 3123.0], [13.3, 3123.0], [13.4, 3123.0], [13.5, 3142.0], [13.6, 3142.0], [13.7, 3142.0], [13.8, 3142.0], [13.9, 3142.0], [14.0, 3155.0], [14.1, 3155.0], [14.2, 3155.0], [14.3, 3155.0], [14.4, 3155.0], [14.5, 3187.0], [14.6, 3187.0], [14.7, 3187.0], [14.8, 3187.0], [14.9, 3187.0], [15.0, 3231.0], [15.1, 3231.0], [15.2, 3231.0], [15.3, 3231.0], [15.4, 3231.0], [15.5, 3237.0], [15.6, 3237.0], [15.7, 3237.0], [15.8, 3237.0], [15.9, 3237.0], [16.0, 3310.0], [16.1, 3310.0], [16.2, 3310.0], [16.3, 3310.0], [16.4, 3310.0], [16.5, 3319.0], [16.6, 3319.0], [16.7, 3319.0], [16.8, 3319.0], [16.9, 3319.0], [17.0, 3330.0], [17.1, 3330.0], [17.2, 3330.0], [17.3, 3330.0], [17.4, 3330.0], [17.5, 3361.0], [17.6, 3361.0], [17.7, 3361.0], [17.8, 3361.0], [17.9, 3361.0], [18.0, 3365.0], [18.1, 3365.0], [18.2, 3365.0], [18.3, 3365.0], [18.4, 3365.0], [18.5, 3404.0], [18.6, 3404.0], [18.7, 3404.0], [18.8, 3404.0], [18.9, 3404.0], [19.0, 3457.0], [19.1, 3457.0], [19.2, 3457.0], [19.3, 3457.0], [19.4, 3457.0], [19.5, 3458.0], [19.6, 3458.0], [19.7, 3458.0], [19.8, 3458.0], [19.9, 3458.0], [20.0, 3469.0], [20.1, 3469.0], [20.2, 3469.0], [20.3, 3469.0], [20.4, 3469.0], [20.5, 3480.0], [20.6, 3480.0], [20.7, 3480.0], [20.8, 3480.0], [20.9, 3480.0], [21.0, 3540.0], [21.1, 3540.0], [21.2, 3540.0], [21.3, 3540.0], [21.4, 3540.0], [21.5, 3553.0], [21.6, 3553.0], [21.7, 3553.0], [21.8, 3553.0], [21.9, 3553.0], [22.0, 3559.0], [22.1, 3559.0], [22.2, 3559.0], [22.3, 3559.0], [22.4, 3559.0], [22.5, 3596.0], [22.6, 3596.0], [22.7, 3596.0], [22.8, 3596.0], [22.9, 3596.0], [23.0, 3616.0], [23.1, 3616.0], [23.2, 3616.0], [23.3, 3616.0], [23.4, 3616.0], [23.5, 3643.0], [23.6, 3643.0], [23.7, 3643.0], [23.8, 3643.0], [23.9, 3643.0], [24.0, 3663.0], [24.1, 3663.0], [24.2, 3663.0], [24.3, 3663.0], [24.4, 3663.0], [24.5, 3733.0], [24.6, 3733.0], [24.7, 3733.0], [24.8, 3733.0], [24.9, 3733.0], [25.0, 3738.0], [25.1, 3738.0], [25.2, 3738.0], [25.3, 3738.0], [25.4, 3738.0], [25.5, 3790.0], [25.6, 3790.0], [25.7, 3790.0], [25.8, 3790.0], [25.9, 3790.0], [26.0, 3830.0], [26.1, 3830.0], [26.2, 3830.0], [26.3, 3830.0], [26.4, 3830.0], [26.5, 3834.0], [26.6, 3834.0], [26.7, 3834.0], [26.8, 3834.0], [26.9, 3834.0], [27.0, 3839.0], [27.1, 3839.0], [27.2, 3839.0], [27.3, 3839.0], [27.4, 3839.0], [27.5, 3861.0], [27.6, 3861.0], [27.7, 3861.0], [27.8, 3861.0], [27.9, 3861.0], [28.0, 3867.0], [28.1, 3867.0], [28.2, 3867.0], [28.3, 3867.0], [28.4, 3867.0], [28.5, 3870.0], [28.6, 3870.0], [28.7, 3870.0], [28.8, 3870.0], [28.9, 3870.0], [29.0, 3884.0], [29.1, 3884.0], [29.2, 3884.0], [29.3, 3884.0], [29.4, 3884.0], [29.5, 3948.0], [29.6, 3948.0], [29.7, 3948.0], [29.8, 3948.0], [29.9, 3948.0], [30.0, 3962.0], [30.1, 3962.0], [30.2, 3962.0], [30.3, 3962.0], [30.4, 3962.0], [30.5, 3991.0], [30.6, 3991.0], [30.7, 3991.0], [30.8, 3991.0], [30.9, 3991.0], [31.0, 4090.0], [31.1, 4090.0], [31.2, 4090.0], [31.3, 4090.0], [31.4, 4090.0], [31.5, 4127.0], [31.6, 4127.0], [31.7, 4127.0], [31.8, 4127.0], [31.9, 4127.0], [32.0, 4138.0], [32.1, 4138.0], [32.2, 4138.0], [32.3, 4138.0], [32.4, 4138.0], [32.5, 4238.0], [32.6, 4238.0], [32.7, 4238.0], [32.8, 4238.0], [32.9, 4238.0], [33.0, 4258.0], [33.1, 4258.0], [33.2, 4258.0], [33.3, 4258.0], [33.4, 4258.0], [33.5, 4265.0], [33.6, 4265.0], [33.7, 4265.0], [33.8, 4265.0], [33.9, 4265.0], [34.0, 4297.0], [34.1, 4297.0], [34.2, 4297.0], [34.3, 4297.0], [34.4, 4297.0], [34.5, 4297.0], [34.6, 4297.0], [34.7, 4297.0], [34.8, 4297.0], [34.9, 4297.0], [35.0, 4313.0], [35.1, 4313.0], [35.2, 4313.0], [35.3, 4313.0], [35.4, 4313.0], [35.5, 4339.0], [35.6, 4339.0], [35.7, 4339.0], [35.8, 4339.0], [35.9, 4339.0], [36.0, 4352.0], [36.1, 4352.0], [36.2, 4352.0], [36.3, 4352.0], [36.4, 4352.0], [36.5, 4440.0], [36.6, 4440.0], [36.7, 4440.0], [36.8, 4440.0], [36.9, 4440.0], [37.0, 4450.0], [37.1, 4450.0], [37.2, 4450.0], [37.3, 4450.0], [37.4, 4450.0], [37.5, 4489.0], [37.6, 4489.0], [37.7, 4489.0], [37.8, 4489.0], [37.9, 4489.0], [38.0, 4504.0], [38.1, 4504.0], [38.2, 4504.0], [38.3, 4504.0], [38.4, 4504.0], [38.5, 4526.0], [38.6, 4526.0], [38.7, 4526.0], [38.8, 4526.0], [38.9, 4526.0], [39.0, 4549.0], [39.1, 4549.0], [39.2, 4549.0], [39.3, 4549.0], [39.4, 4549.0], [39.5, 4560.0], [39.6, 4560.0], [39.7, 4560.0], [39.8, 4560.0], [39.9, 4560.0], [40.0, 4567.0], [40.1, 4567.0], [40.2, 4567.0], [40.3, 4567.0], [40.4, 4567.0], [40.5, 4569.0], [40.6, 4569.0], [40.7, 4569.0], [40.8, 4569.0], [40.9, 4569.0], [41.0, 4573.0], [41.1, 4573.0], [41.2, 4573.0], [41.3, 4573.0], [41.4, 4573.0], [41.5, 4579.0], [41.6, 4579.0], [41.7, 4579.0], [41.8, 4579.0], [41.9, 4579.0], [42.0, 4581.0], [42.1, 4581.0], [42.2, 4581.0], [42.3, 4581.0], [42.4, 4581.0], [42.5, 4586.0], [42.6, 4586.0], [42.7, 4586.0], [42.8, 4586.0], [42.9, 4586.0], [43.0, 4592.0], [43.1, 4592.0], [43.2, 4592.0], [43.3, 4592.0], [43.4, 4592.0], [43.5, 4596.0], [43.6, 4596.0], [43.7, 4596.0], [43.8, 4596.0], [43.9, 4596.0], [44.0, 4600.0], [44.1, 4600.0], [44.2, 4600.0], [44.3, 4600.0], [44.4, 4600.0], [44.5, 4603.0], [44.6, 4603.0], [44.7, 4603.0], [44.8, 4603.0], [44.9, 4603.0], [45.0, 4603.0], [45.1, 4603.0], [45.2, 4603.0], [45.3, 4603.0], [45.4, 4603.0], [45.5, 4610.0], [45.6, 4610.0], [45.7, 4610.0], [45.8, 4610.0], [45.9, 4610.0], [46.0, 4621.0], [46.1, 4621.0], [46.2, 4621.0], [46.3, 4621.0], [46.4, 4621.0], [46.5, 4628.0], [46.6, 4628.0], [46.7, 4628.0], [46.8, 4628.0], [46.9, 4628.0], [47.0, 4629.0], [47.1, 4629.0], [47.2, 4629.0], [47.3, 4629.0], [47.4, 4629.0], [47.5, 4632.0], [47.6, 4632.0], [47.7, 4632.0], [47.8, 4632.0], [47.9, 4632.0], [48.0, 4647.0], [48.1, 4647.0], [48.2, 4647.0], [48.3, 4647.0], [48.4, 4647.0], [48.5, 4647.0], [48.6, 4647.0], [48.7, 4647.0], [48.8, 4647.0], [48.9, 4647.0], [49.0, 4655.0], [49.1, 4655.0], [49.2, 4655.0], [49.3, 4655.0], [49.4, 4655.0], [49.5, 4659.0], [49.6, 4659.0], [49.7, 4659.0], [49.8, 4659.0], [49.9, 4659.0], [50.0, 4669.0], [50.1, 4669.0], [50.2, 4669.0], [50.3, 4669.0], [50.4, 4669.0], [50.5, 4672.0], [50.6, 4672.0], [50.7, 4672.0], [50.8, 4672.0], [50.9, 4672.0], [51.0, 4677.0], [51.1, 4677.0], [51.2, 4677.0], [51.3, 4677.0], [51.4, 4677.0], [51.5, 4680.0], [51.6, 4680.0], [51.7, 4680.0], [51.8, 4680.0], [51.9, 4680.0], [52.0, 4682.0], [52.1, 4682.0], [52.2, 4682.0], [52.3, 4682.0], [52.4, 4682.0], [52.5, 4682.0], [52.6, 4682.0], [52.7, 4682.0], [52.8, 4682.0], [52.9, 4682.0], [53.0, 4689.0], [53.1, 4689.0], [53.2, 4689.0], [53.3, 4689.0], [53.4, 4689.0], [53.5, 4691.0], [53.6, 4691.0], [53.7, 4691.0], [53.8, 4691.0], [53.9, 4691.0], [54.0, 4691.0], [54.1, 4691.0], [54.2, 4691.0], [54.3, 4691.0], [54.4, 4691.0], [54.5, 4700.0], [54.6, 4700.0], [54.7, 4700.0], [54.8, 4700.0], [54.9, 4700.0], [55.0, 4725.0], [55.1, 4725.0], [55.2, 4725.0], [55.3, 4725.0], [55.4, 4725.0], [55.5, 4732.0], [55.6, 4732.0], [55.7, 4732.0], [55.8, 4732.0], [55.9, 4732.0], [56.0, 4735.0], [56.1, 4735.0], [56.2, 4735.0], [56.3, 4735.0], [56.4, 4735.0], [56.5, 4735.0], [56.6, 4735.0], [56.7, 4735.0], [56.8, 4735.0], [56.9, 4735.0], [57.0, 4737.0], [57.1, 4737.0], [57.2, 4737.0], [57.3, 4737.0], [57.4, 4737.0], [57.5, 4741.0], [57.6, 4741.0], [57.7, 4741.0], [57.8, 4741.0], [57.9, 4741.0], [58.0, 4746.0], [58.1, 4746.0], [58.2, 4746.0], [58.3, 4746.0], [58.4, 4746.0], [58.5, 4759.0], [58.6, 4759.0], [58.7, 4759.0], [58.8, 4759.0], [58.9, 4759.0], [59.0, 4772.0], [59.1, 4772.0], [59.2, 4772.0], [59.3, 4772.0], [59.4, 4772.0], [59.5, 4780.0], [59.6, 4780.0], [59.7, 4780.0], [59.8, 4780.0], [59.9, 4780.0], [60.0, 4785.0], [60.1, 4785.0], [60.2, 4785.0], [60.3, 4785.0], [60.4, 4785.0], [60.5, 4797.0], [60.6, 4797.0], [60.7, 4797.0], [60.8, 4797.0], [60.9, 4797.0], [61.0, 4815.0], [61.1, 4815.0], [61.2, 4815.0], [61.3, 4815.0], [61.4, 4815.0], [61.5, 4822.0], [61.6, 4822.0], [61.7, 4822.0], [61.8, 4822.0], [61.9, 4822.0], [62.0, 4834.0], [62.1, 4834.0], [62.2, 4834.0], [62.3, 4834.0], [62.4, 4834.0], [62.5, 4839.0], [62.6, 4839.0], [62.7, 4839.0], [62.8, 4839.0], [62.9, 4839.0], [63.0, 4844.0], [63.1, 4844.0], [63.2, 4844.0], [63.3, 4844.0], [63.4, 4844.0], [63.5, 4851.0], [63.6, 4851.0], [63.7, 4851.0], [63.8, 4851.0], [63.9, 4851.0], [64.0, 4853.0], [64.1, 4853.0], [64.2, 4853.0], [64.3, 4853.0], [64.4, 4853.0], [64.5, 4854.0], [64.6, 4854.0], [64.7, 4854.0], [64.8, 4854.0], [64.9, 4854.0], [65.0, 4859.0], [65.1, 4859.0], [65.2, 4859.0], [65.3, 4859.0], [65.4, 4859.0], [65.5, 4860.0], [65.6, 4860.0], [65.7, 4860.0], [65.8, 4860.0], [65.9, 4860.0], [66.0, 4870.0], [66.1, 4870.0], [66.2, 4870.0], [66.3, 4870.0], [66.4, 4870.0], [66.5, 4880.0], [66.6, 4880.0], [66.7, 4880.0], [66.8, 4880.0], [66.9, 4880.0], [67.0, 4881.0], [67.1, 4881.0], [67.2, 4881.0], [67.3, 4881.0], [67.4, 4881.0], [67.5, 4883.0], [67.6, 4883.0], [67.7, 4883.0], [67.8, 4883.0], [67.9, 4883.0], [68.0, 4889.0], [68.1, 4889.0], [68.2, 4889.0], [68.3, 4889.0], [68.4, 4889.0], [68.5, 4893.0], [68.6, 4893.0], [68.7, 4893.0], [68.8, 4893.0], [68.9, 4893.0], [69.0, 4896.0], [69.1, 4896.0], [69.2, 4896.0], [69.3, 4896.0], [69.4, 4896.0], [69.5, 4900.0], [69.6, 4900.0], [69.7, 4900.0], [69.8, 4900.0], [69.9, 4900.0], [70.0, 4929.0], [70.1, 4929.0], [70.2, 4929.0], [70.3, 4929.0], [70.4, 4929.0], [70.5, 4958.0], [70.6, 4958.0], [70.7, 4958.0], [70.8, 4958.0], [70.9, 4958.0], [71.0, 4970.0], [71.1, 4970.0], [71.2, 4970.0], [71.3, 4970.0], [71.4, 4970.0], [71.5, 4979.0], [71.6, 4979.0], [71.7, 4979.0], [71.8, 4979.0], [71.9, 4979.0], [72.0, 4980.0], [72.1, 4980.0], [72.2, 4980.0], [72.3, 4980.0], [72.4, 4980.0], [72.5, 4992.0], [72.6, 4992.0], [72.7, 4992.0], [72.8, 4992.0], [72.9, 4992.0], [73.0, 4993.0], [73.1, 4993.0], [73.2, 4993.0], [73.3, 4993.0], [73.4, 4993.0], [73.5, 5004.0], [73.6, 5004.0], [73.7, 5004.0], [73.8, 5004.0], [73.9, 5004.0], [74.0, 5006.0], [74.1, 5006.0], [74.2, 5006.0], [74.3, 5006.0], [74.4, 5006.0], [74.5, 5011.0], [74.6, 5011.0], [74.7, 5011.0], [74.8, 5011.0], [74.9, 5011.0], [75.0, 5029.0], [75.1, 5029.0], [75.2, 5029.0], [75.3, 5029.0], [75.4, 5029.0], [75.5, 5049.0], [75.6, 5049.0], [75.7, 5049.0], [75.8, 5049.0], [75.9, 5049.0], [76.0, 5060.0], [76.1, 5060.0], [76.2, 5060.0], [76.3, 5060.0], [76.4, 5060.0], [76.5, 5085.0], [76.6, 5085.0], [76.7, 5085.0], [76.8, 5085.0], [76.9, 5085.0], [77.0, 5147.0], [77.1, 5147.0], [77.2, 5147.0], [77.3, 5147.0], [77.4, 5147.0], [77.5, 5170.0], [77.6, 5170.0], [77.7, 5170.0], [77.8, 5170.0], [77.9, 5170.0], [78.0, 5174.0], [78.1, 5174.0], [78.2, 5174.0], [78.3, 5174.0], [78.4, 5174.0], [78.5, 5188.0], [78.6, 5188.0], [78.7, 5188.0], [78.8, 5188.0], [78.9, 5188.0], [79.0, 5196.0], [79.1, 5196.0], [79.2, 5196.0], [79.3, 5196.0], [79.4, 5196.0], [79.5, 5197.0], [79.6, 5197.0], [79.7, 5197.0], [79.8, 5197.0], [79.9, 5197.0], [80.0, 5203.0], [80.1, 5203.0], [80.2, 5203.0], [80.3, 5203.0], [80.4, 5203.0], [80.5, 5212.0], [80.6, 5212.0], [80.7, 5212.0], [80.8, 5212.0], [80.9, 5212.0], [81.0, 5220.0], [81.1, 5220.0], [81.2, 5220.0], [81.3, 5220.0], [81.4, 5220.0], [81.5, 5236.0], [81.6, 5236.0], [81.7, 5236.0], [81.8, 5236.0], [81.9, 5236.0], [82.0, 5236.0], [82.1, 5236.0], [82.2, 5236.0], [82.3, 5236.0], [82.4, 5236.0], [82.5, 5240.0], [82.6, 5240.0], [82.7, 5240.0], [82.8, 5240.0], [82.9, 5240.0], [83.0, 5245.0], [83.1, 5245.0], [83.2, 5245.0], [83.3, 5245.0], [83.4, 5245.0], [83.5, 5251.0], [83.6, 5251.0], [83.7, 5251.0], [83.8, 5251.0], [83.9, 5251.0], [84.0, 5265.0], [84.1, 5265.0], [84.2, 5265.0], [84.3, 5265.0], [84.4, 5265.0], [84.5, 5272.0], [84.6, 5272.0], [84.7, 5272.0], [84.8, 5272.0], [84.9, 5272.0], [85.0, 5278.0], [85.1, 5278.0], [85.2, 5278.0], [85.3, 5278.0], [85.4, 5278.0], [85.5, 5282.0], [85.6, 5282.0], [85.7, 5282.0], [85.8, 5282.0], [85.9, 5282.0], [86.0, 5294.0], [86.1, 5294.0], [86.2, 5294.0], [86.3, 5294.0], [86.4, 5294.0], [86.5, 5295.0], [86.6, 5295.0], [86.7, 5295.0], [86.8, 5295.0], [86.9, 5295.0], [87.0, 5331.0], [87.1, 5331.0], [87.2, 5331.0], [87.3, 5331.0], [87.4, 5331.0], [87.5, 5339.0], [87.6, 5339.0], [87.7, 5339.0], [87.8, 5339.0], [87.9, 5339.0], [88.0, 5345.0], [88.1, 5345.0], [88.2, 5345.0], [88.3, 5345.0], [88.4, 5345.0], [88.5, 5356.0], [88.6, 5356.0], [88.7, 5356.0], [88.8, 5356.0], [88.9, 5356.0], [89.0, 5446.0], [89.1, 5446.0], [89.2, 5446.0], [89.3, 5446.0], [89.4, 5446.0], [89.5, 5464.0], [89.6, 5464.0], [89.7, 5464.0], [89.8, 5464.0], [89.9, 5464.0], [90.0, 5464.0], [90.1, 5464.0], [90.2, 5464.0], [90.3, 5464.0], [90.4, 5464.0], [90.5, 5475.0], [90.6, 5475.0], [90.7, 5475.0], [90.8, 5475.0], [90.9, 5475.0], [91.0, 5493.0], [91.1, 5493.0], [91.2, 5493.0], [91.3, 5493.0], [91.4, 5493.0], [91.5, 5497.0], [91.6, 5497.0], [91.7, 5497.0], [91.8, 5497.0], [91.9, 5497.0], [92.0, 5542.0], [92.1, 5542.0], [92.2, 5542.0], [92.3, 5542.0], [92.4, 5542.0], [92.5, 5542.0], [92.6, 5542.0], [92.7, 5542.0], [92.8, 5542.0], [92.9, 5542.0], [93.0, 5545.0], [93.1, 5545.0], [93.2, 5545.0], [93.3, 5545.0], [93.4, 5545.0], [93.5, 5550.0], [93.6, 5550.0], [93.7, 5550.0], [93.8, 5550.0], [93.9, 5550.0], [94.0, 5554.0], [94.1, 5554.0], [94.2, 5554.0], [94.3, 5554.0], [94.4, 5554.0], [94.5, 5571.0], [94.6, 5571.0], [94.7, 5571.0], [94.8, 5571.0], [94.9, 5571.0], [95.0, 5585.0], [95.1, 5585.0], [95.2, 5585.0], [95.3, 5585.0], [95.4, 5585.0], [95.5, 5639.0], [95.6, 5639.0], [95.7, 5639.0], [95.8, 5639.0], [95.9, 5639.0], [96.0, 5684.0], [96.1, 5684.0], [96.2, 5684.0], [96.3, 5684.0], [96.4, 5684.0], [96.5, 5699.0], [96.6, 5699.0], [96.7, 5699.0], [96.8, 5699.0], [96.9, 5699.0], [97.0, 5848.0], [97.1, 5848.0], [97.2, 5848.0], [97.3, 5848.0], [97.4, 5848.0], [97.5, 5871.0], [97.6, 5871.0], [97.7, 5871.0], [97.8, 5871.0], [97.9, 5871.0], [98.0, 6081.0], [98.1, 6081.0], [98.2, 6081.0], [98.3, 6081.0], [98.4, 6081.0], [98.5, 6576.0], [98.6, 6576.0], [98.7, 6576.0], [98.8, 6576.0], [98.9, 6576.0], [99.0, 7096.0], [99.1, 7096.0], [99.2, 7096.0], [99.3, 7096.0], [99.4, 7096.0], [99.5, 7111.0], [99.6, 7111.0], [99.7, 7111.0], [99.8, 7111.0], [99.9, 7111.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[0.0, 594.0], [0.1, 594.0], [0.2, 594.0], [0.3, 594.0], [0.4, 594.0], [0.5, 594.0], [0.6, 613.0], [0.7, 613.0], [0.8, 613.0], [0.9, 613.0], [1.0, 613.0], [1.1, 643.0], [1.2, 643.0], [1.3, 643.0], [1.4, 643.0], [1.5, 643.0], [1.6, 651.0], [1.7, 651.0], [1.8, 651.0], [1.9, 651.0], [2.0, 651.0], [2.1, 655.0], [2.2, 655.0], [2.3, 655.0], [2.4, 655.0], [2.5, 655.0], [2.6, 655.0], [2.7, 706.0], [2.8, 706.0], [2.9, 706.0], [3.0, 706.0], [3.1, 706.0], [3.2, 708.0], [3.3, 708.0], [3.4, 708.0], [3.5, 708.0], [3.6, 708.0], [3.7, 708.0], [3.8, 708.0], [3.9, 708.0], [4.0, 708.0], [4.1, 708.0], [4.2, 718.0], [4.3, 718.0], [4.4, 718.0], [4.5, 718.0], [4.6, 718.0], [4.7, 718.0], [4.8, 719.0], [4.9, 719.0], [5.0, 719.0], [5.1, 719.0], [5.2, 719.0], [5.3, 790.0], [5.4, 790.0], [5.5, 790.0], [5.6, 790.0], [5.7, 790.0], [5.8, 826.0], [5.9, 826.0], [6.0, 826.0], [6.1, 826.0], [6.2, 826.0], [6.3, 829.0], [6.4, 829.0], [6.5, 829.0], [6.6, 829.0], [6.7, 829.0], [6.8, 829.0], [6.9, 836.0], [7.0, 836.0], [7.1, 836.0], [7.2, 836.0], [7.3, 836.0], [7.4, 843.0], [7.5, 843.0], [7.6, 843.0], [7.7, 843.0], [7.8, 843.0], [7.9, 987.0], [8.0, 987.0], [8.1, 987.0], [8.2, 987.0], [8.3, 987.0], [8.4, 989.0], [8.5, 989.0], [8.6, 989.0], [8.7, 989.0], [8.8, 989.0], [8.9, 989.0], [9.0, 1051.0], [9.1, 1051.0], [9.2, 1051.0], [9.3, 1051.0], [9.4, 1051.0], [9.5, 1076.0], [9.6, 1076.0], [9.7, 1076.0], [9.8, 1076.0], [9.9, 1076.0], [10.0, 1099.0], [10.1, 1099.0], [10.2, 1099.0], [10.3, 1099.0], [10.4, 1099.0], [10.5, 1103.0], [10.6, 1103.0], [10.7, 1103.0], [10.8, 1103.0], [10.9, 1103.0], [11.0, 1115.0], [11.1, 1115.0], [11.2, 1115.0], [11.3, 1115.0], [11.4, 1115.0], [11.5, 1115.0], [11.6, 1130.0], [11.7, 1130.0], [11.8, 1130.0], [11.9, 1130.0], [12.0, 1130.0], [12.1, 1199.0], [12.2, 1199.0], [12.3, 1199.0], [12.4, 1199.0], [12.5, 1199.0], [12.6, 1230.0], [12.7, 1230.0], [12.8, 1230.0], [12.9, 1230.0], [13.0, 1230.0], [13.1, 1233.0], [13.2, 1233.0], [13.3, 1233.0], [13.4, 1233.0], [13.5, 1233.0], [13.6, 1233.0], [13.7, 1236.0], [13.8, 1236.0], [13.9, 1236.0], [14.0, 1236.0], [14.1, 1236.0], [14.2, 1243.0], [14.3, 1243.0], [14.4, 1243.0], [14.5, 1243.0], [14.6, 1243.0], [14.7, 1285.0], [14.8, 1285.0], [14.9, 1285.0], [15.0, 1285.0], [15.1, 1285.0], [15.2, 1314.0], [15.3, 1314.0], [15.4, 1314.0], [15.5, 1314.0], [15.6, 1314.0], [15.7, 1314.0], [15.8, 1375.0], [15.9, 1375.0], [16.0, 1375.0], [16.1, 1375.0], [16.2, 1375.0], [16.3, 1382.0], [16.4, 1382.0], [16.5, 1382.0], [16.6, 1382.0], [16.7, 1382.0], [16.8, 1397.0], [16.9, 1397.0], [17.0, 1397.0], [17.1, 1397.0], [17.2, 1397.0], [17.3, 1416.0], [17.4, 1416.0], [17.5, 1416.0], [17.6, 1416.0], [17.7, 1416.0], [17.8, 1416.0], [17.9, 1424.0], [18.0, 1424.0], [18.1, 1424.0], [18.2, 1424.0], [18.3, 1424.0], [18.4, 1449.0], [18.5, 1449.0], [18.6, 1449.0], [18.7, 1449.0], [18.8, 1449.0], [18.9, 1454.0], [19.0, 1454.0], [19.1, 1454.0], [19.2, 1454.0], [19.3, 1454.0], [19.4, 1463.0], [19.5, 1463.0], [19.6, 1463.0], [19.7, 1463.0], [19.8, 1463.0], [19.9, 1524.0], [20.0, 1524.0], [20.1, 1524.0], [20.2, 1524.0], [20.3, 1524.0], [20.4, 1524.0], [20.5, 1538.0], [20.6, 1538.0], [20.7, 1538.0], [20.8, 1538.0], [20.9, 1538.0], [21.0, 1614.0], [21.1, 1614.0], [21.2, 1614.0], [21.3, 1614.0], [21.4, 1614.0], [21.5, 1621.0], [21.6, 1621.0], [21.7, 1621.0], [21.8, 1621.0], [21.9, 1621.0], [22.0, 1644.0], [22.1, 1644.0], [22.2, 1644.0], [22.3, 1644.0], [22.4, 1644.0], [22.5, 1644.0], [22.6, 1652.0], [22.7, 1652.0], [22.8, 1652.0], [22.9, 1652.0], [23.0, 1652.0], [23.1, 1688.0], [23.2, 1688.0], [23.3, 1688.0], [23.4, 1688.0], [23.5, 1688.0], [23.6, 1707.0], [23.7, 1707.0], [23.8, 1707.0], [23.9, 1707.0], [24.0, 1707.0], [24.1, 1709.0], [24.2, 1709.0], [24.3, 1709.0], [24.4, 1709.0], [24.5, 1709.0], [24.6, 1709.0], [24.7, 1711.0], [24.8, 1711.0], [24.9, 1711.0], [25.0, 1711.0], [25.1, 1711.0], [25.2, 1716.0], [25.3, 1716.0], [25.4, 1716.0], [25.5, 1716.0], [25.6, 1716.0], [25.7, 1720.0], [25.8, 1720.0], [25.9, 1720.0], [26.0, 1720.0], [26.1, 1720.0], [26.2, 1741.0], [26.3, 1741.0], [26.4, 1741.0], [26.5, 1741.0], [26.6, 1741.0], [26.7, 1741.0], [26.8, 1745.0], [26.9, 1745.0], [27.0, 1745.0], [27.1, 1745.0], [27.2, 1745.0], [27.3, 1751.0], [27.4, 1751.0], [27.5, 1751.0], [27.6, 1751.0], [27.7, 1751.0], [27.8, 1762.0], [27.9, 1762.0], [28.0, 1762.0], [28.1, 1762.0], [28.2, 1762.0], [28.3, 1816.0], [28.4, 1816.0], [28.5, 1816.0], [28.6, 1816.0], [28.7, 1816.0], [28.8, 1934.0], [28.9, 1934.0], [29.0, 1934.0], [29.1, 1934.0], [29.2, 1934.0], [29.3, 1934.0], [29.4, 1945.0], [29.5, 1945.0], [29.6, 1945.0], [29.7, 1945.0], [29.8, 1945.0], [29.9, 2021.0], [30.0, 2021.0], [30.1, 2021.0], [30.2, 2021.0], [30.3, 2021.0], [30.4, 2038.0], [30.5, 2038.0], [30.6, 2038.0], [30.7, 2038.0], [30.8, 2038.0], [30.9, 2049.0], [31.0, 2049.0], [31.1, 2049.0], [31.2, 2049.0], [31.3, 2049.0], [31.4, 2049.0], [31.5, 2052.0], [31.6, 2052.0], [31.7, 2052.0], [31.8, 2052.0], [31.9, 2052.0], [32.0, 2064.0], [32.1, 2064.0], [32.2, 2064.0], [32.3, 2064.0], [32.4, 2064.0], [32.5, 2068.0], [32.6, 2068.0], [32.7, 2068.0], [32.8, 2068.0], [32.9, 2068.0], [33.0, 2084.0], [33.1, 2084.0], [33.2, 2084.0], [33.3, 2084.0], [33.4, 2084.0], [33.5, 2084.0], [33.6, 2098.0], [33.7, 2098.0], [33.8, 2098.0], [33.9, 2098.0], [34.0, 2098.0], [34.1, 2101.0], [34.2, 2101.0], [34.3, 2101.0], [34.4, 2101.0], [34.5, 2101.0], [34.6, 2123.0], [34.7, 2123.0], [34.8, 2123.0], [34.9, 2123.0], [35.0, 2123.0], [35.1, 2140.0], [35.2, 2140.0], [35.3, 2140.0], [35.4, 2140.0], [35.5, 2140.0], [35.6, 2140.0], [35.7, 2158.0], [35.8, 2158.0], [35.9, 2158.0], [36.0, 2158.0], [36.1, 2158.0], [36.2, 2163.0], [36.3, 2163.0], [36.4, 2163.0], [36.5, 2163.0], [36.6, 2163.0], [36.7, 2174.0], [36.8, 2174.0], [36.9, 2174.0], [37.0, 2174.0], [37.1, 2174.0], [37.2, 2184.0], [37.3, 2184.0], [37.4, 2184.0], [37.5, 2184.0], [37.6, 2184.0], [37.7, 2186.0], [37.8, 2186.0], [37.9, 2186.0], [38.0, 2186.0], [38.1, 2186.0], [38.2, 2186.0], [38.3, 2191.0], [38.4, 2191.0], [38.5, 2191.0], [38.6, 2191.0], [38.7, 2191.0], [38.8, 2248.0], [38.9, 2248.0], [39.0, 2248.0], [39.1, 2248.0], [39.2, 2248.0], [39.3, 2251.0], [39.4, 2251.0], [39.5, 2251.0], [39.6, 2251.0], [39.7, 2251.0], [39.8, 2258.0], [39.9, 2258.0], [40.0, 2258.0], [40.1, 2258.0], [40.2, 2258.0], [40.3, 2258.0], [40.4, 2284.0], [40.5, 2284.0], [40.6, 2284.0], [40.7, 2284.0], [40.8, 2284.0], [40.9, 2284.0], [41.0, 2284.0], [41.1, 2284.0], [41.2, 2284.0], [41.3, 2284.0], [41.4, 2316.0], [41.5, 2316.0], [41.6, 2316.0], [41.7, 2316.0], [41.8, 2316.0], [41.9, 2321.0], [42.0, 2321.0], [42.1, 2321.0], [42.2, 2321.0], [42.3, 2321.0], [42.4, 2321.0], [42.5, 2322.0], [42.6, 2322.0], [42.7, 2322.0], [42.8, 2322.0], [42.9, 2322.0], [43.0, 2335.0], [43.1, 2335.0], [43.2, 2335.0], [43.3, 2335.0], [43.4, 2335.0], [43.5, 2365.0], [43.6, 2365.0], [43.7, 2365.0], [43.8, 2365.0], [43.9, 2365.0], [44.0, 2385.0], [44.1, 2385.0], [44.2, 2385.0], [44.3, 2385.0], [44.4, 2385.0], [44.5, 2385.0], [44.6, 2406.0], [44.7, 2406.0], [44.8, 2406.0], [44.9, 2406.0], [45.0, 2406.0], [45.1, 2419.0], [45.2, 2419.0], [45.3, 2419.0], [45.4, 2419.0], [45.5, 2419.0], [45.6, 2423.0], [45.7, 2423.0], [45.8, 2423.0], [45.9, 2423.0], [46.0, 2423.0], [46.1, 2439.0], [46.2, 2439.0], [46.3, 2439.0], [46.4, 2439.0], [46.5, 2439.0], [46.6, 2449.0], [46.7, 2449.0], [46.8, 2449.0], [46.9, 2449.0], [47.0, 2449.0], [47.1, 2449.0], [47.2, 2475.0], [47.3, 2475.0], [47.4, 2475.0], [47.5, 2475.0], [47.6, 2475.0], [47.7, 2477.0], [47.8, 2477.0], [47.9, 2477.0], [48.0, 2477.0], [48.1, 2477.0], [48.2, 2478.0], [48.3, 2478.0], [48.4, 2478.0], [48.5, 2478.0], [48.6, 2478.0], [48.7, 2478.0], [48.8, 2478.0], [48.9, 2478.0], [49.0, 2478.0], [49.1, 2478.0], [49.2, 2478.0], [49.3, 2487.0], [49.4, 2487.0], [49.5, 2487.0], [49.6, 2487.0], [49.7, 2487.0], [49.8, 2494.0], [49.9, 2494.0], [50.0, 2494.0], [50.1, 2494.0], [50.2, 2494.0], [50.3, 2501.0], [50.4, 2501.0], [50.5, 2501.0], [50.6, 2501.0], [50.7, 2501.0], [50.8, 2506.0], [50.9, 2506.0], [51.0, 2506.0], [51.1, 2506.0], [51.2, 2506.0], [51.3, 2506.0], [51.4, 2508.0], [51.5, 2508.0], [51.6, 2508.0], [51.7, 2508.0], [51.8, 2508.0], [51.9, 2514.0], [52.0, 2514.0], [52.1, 2514.0], [52.2, 2514.0], [52.3, 2514.0], [52.4, 2516.0], [52.5, 2516.0], [52.6, 2516.0], [52.7, 2516.0], [52.8, 2516.0], [52.9, 2517.0], [53.0, 2517.0], [53.1, 2517.0], [53.2, 2517.0], [53.3, 2517.0], [53.4, 2517.0], [53.5, 2522.0], [53.6, 2522.0], [53.7, 2522.0], [53.8, 2522.0], [53.9, 2522.0], [54.0, 2526.0], [54.1, 2526.0], [54.2, 2526.0], [54.3, 2526.0], [54.4, 2526.0], [54.5, 2538.0], [54.6, 2538.0], [54.7, 2538.0], [54.8, 2538.0], [54.9, 2538.0], [55.0, 2550.0], [55.1, 2550.0], [55.2, 2550.0], [55.3, 2550.0], [55.4, 2550.0], [55.5, 2561.0], [55.6, 2561.0], [55.7, 2561.0], [55.8, 2561.0], [55.9, 2561.0], [56.0, 2561.0], [56.1, 2564.0], [56.2, 2564.0], [56.3, 2564.0], [56.4, 2564.0], [56.5, 2564.0], [56.6, 2566.0], [56.7, 2566.0], [56.8, 2566.0], [56.9, 2566.0], [57.0, 2566.0], [57.1, 2569.0], [57.2, 2569.0], [57.3, 2569.0], [57.4, 2569.0], [57.5, 2569.0], [57.6, 2575.0], [57.7, 2575.0], [57.8, 2575.0], [57.9, 2575.0], [58.0, 2575.0], [58.1, 2575.0], [58.2, 2576.0], [58.3, 2576.0], [58.4, 2576.0], [58.5, 2576.0], [58.6, 2576.0], [58.7, 2578.0], [58.8, 2578.0], [58.9, 2578.0], [59.0, 2578.0], [59.1, 2578.0], [59.2, 2594.0], [59.3, 2594.0], [59.4, 2594.0], [59.5, 2594.0], [59.6, 2594.0], [59.7, 2599.0], [59.8, 2599.0], [59.9, 2599.0], [60.0, 2599.0], [60.1, 2599.0], [60.2, 2599.0], [60.3, 2604.0], [60.4, 2604.0], [60.5, 2604.0], [60.6, 2604.0], [60.7, 2604.0], [60.8, 2613.0], [60.9, 2613.0], [61.0, 2613.0], [61.1, 2613.0], [61.2, 2613.0], [61.3, 2618.0], [61.4, 2618.0], [61.5, 2618.0], [61.6, 2618.0], [61.7, 2618.0], [61.8, 2627.0], [61.9, 2627.0], [62.0, 2627.0], [62.1, 2627.0], [62.2, 2627.0], [62.3, 2627.0], [62.4, 2628.0], [62.5, 2628.0], [62.6, 2628.0], [62.7, 2628.0], [62.8, 2628.0], [62.9, 2644.0], [63.0, 2644.0], [63.1, 2644.0], [63.2, 2644.0], [63.3, 2644.0], [63.4, 2646.0], [63.5, 2646.0], [63.6, 2646.0], [63.7, 2646.0], [63.8, 2646.0], [63.9, 2648.0], [64.0, 2648.0], [64.1, 2648.0], [64.2, 2648.0], [64.3, 2648.0], [64.4, 2652.0], [64.5, 2652.0], [64.6, 2652.0], [64.7, 2652.0], [64.8, 2652.0], [64.9, 2652.0], [65.0, 2655.0], [65.1, 2655.0], [65.2, 2655.0], [65.3, 2655.0], [65.4, 2655.0], [65.5, 2655.0], [65.6, 2655.0], [65.7, 2655.0], [65.8, 2655.0], [65.9, 2655.0], [66.0, 2659.0], [66.1, 2659.0], [66.2, 2659.0], [66.3, 2659.0], [66.4, 2659.0], [66.5, 2662.0], [66.6, 2662.0], [66.7, 2662.0], [66.8, 2662.0], [66.9, 2662.0], [67.0, 2662.0], [67.1, 2668.0], [67.2, 2668.0], [67.3, 2668.0], [67.4, 2668.0], [67.5, 2668.0], [67.6, 2678.0], [67.7, 2678.0], [67.8, 2678.0], [67.9, 2678.0], [68.0, 2678.0], [68.1, 2678.0], [68.2, 2678.0], [68.3, 2678.0], [68.4, 2678.0], [68.5, 2678.0], [68.6, 2678.0], [68.7, 2678.0], [68.8, 2678.0], [68.9, 2678.0], [69.0, 2678.0], [69.1, 2678.0], [69.2, 2679.0], [69.3, 2679.0], [69.4, 2679.0], [69.5, 2679.0], [69.6, 2679.0], [69.7, 2683.0], [69.8, 2683.0], [69.9, 2683.0], [70.0, 2683.0], [70.1, 2683.0], [70.2, 2683.0], [70.3, 2683.0], [70.4, 2683.0], [70.5, 2683.0], [70.6, 2683.0], [70.7, 2693.0], [70.8, 2693.0], [70.9, 2693.0], [71.0, 2693.0], [71.1, 2693.0], [71.2, 2693.0], [71.3, 2693.0], [71.4, 2693.0], [71.5, 2693.0], [71.6, 2693.0], [71.7, 2693.0], [71.8, 2694.0], [71.9, 2694.0], [72.0, 2694.0], [72.1, 2694.0], [72.2, 2694.0], [72.3, 2695.0], [72.4, 2695.0], [72.5, 2695.0], [72.6, 2695.0], [72.7, 2695.0], [72.8, 2701.0], [72.9, 2701.0], [73.0, 2701.0], [73.1, 2701.0], [73.2, 2701.0], [73.3, 2701.0], [73.4, 2701.0], [73.5, 2701.0], [73.6, 2701.0], [73.7, 2701.0], [73.8, 2701.0], [73.9, 2702.0], [74.0, 2702.0], [74.1, 2702.0], [74.2, 2702.0], [74.3, 2702.0], [74.4, 2704.0], [74.5, 2704.0], [74.6, 2704.0], [74.7, 2704.0], [74.8, 2704.0], [74.9, 2705.0], [75.0, 2705.0], [75.1, 2705.0], [75.2, 2705.0], [75.3, 2705.0], [75.4, 2706.0], [75.5, 2706.0], [75.6, 2706.0], [75.7, 2706.0], [75.8, 2706.0], [75.9, 2706.0], [76.0, 2721.0], [76.1, 2721.0], [76.2, 2721.0], [76.3, 2721.0], [76.4, 2721.0], [76.5, 2724.0], [76.6, 2724.0], [76.7, 2724.0], [76.8, 2724.0], [76.9, 2724.0], [77.0, 2725.0], [77.1, 2725.0], [77.2, 2725.0], [77.3, 2725.0], [77.4, 2725.0], [77.5, 2726.0], [77.6, 2726.0], [77.7, 2726.0], [77.8, 2726.0], [77.9, 2726.0], [78.0, 2726.0], [78.1, 2727.0], [78.2, 2727.0], [78.3, 2727.0], [78.4, 2727.0], [78.5, 2727.0], [78.6, 2728.0], [78.7, 2728.0], [78.8, 2728.0], [78.9, 2728.0], [79.0, 2728.0], [79.1, 2731.0], [79.2, 2731.0], [79.3, 2731.0], [79.4, 2731.0], [79.5, 2731.0], [79.6, 2735.0], [79.7, 2735.0], [79.8, 2735.0], [79.9, 2735.0], [80.0, 2735.0], [80.1, 2735.0], [80.2, 2741.0], [80.3, 2741.0], [80.4, 2741.0], [80.5, 2741.0], [80.6, 2741.0], [80.7, 2742.0], [80.8, 2742.0], [80.9, 2742.0], [81.0, 2742.0], [81.1, 2742.0], [81.2, 2748.0], [81.3, 2748.0], [81.4, 2748.0], [81.5, 2748.0], [81.6, 2748.0], [81.7, 2750.0], [81.8, 2750.0], [81.9, 2750.0], [82.0, 2750.0], [82.1, 2750.0], [82.2, 2755.0], [82.3, 2755.0], [82.4, 2755.0], [82.5, 2755.0], [82.6, 2755.0], [82.7, 2755.0], [82.8, 2759.0], [82.9, 2759.0], [83.0, 2759.0], [83.1, 2759.0], [83.2, 2759.0], [83.3, 2763.0], [83.4, 2763.0], [83.5, 2763.0], [83.6, 2763.0], [83.7, 2763.0], [83.8, 2769.0], [83.9, 2769.0], [84.0, 2769.0], [84.1, 2769.0], [84.2, 2769.0], [84.3, 2770.0], [84.4, 2770.0], [84.5, 2770.0], [84.6, 2770.0], [84.7, 2770.0], [84.8, 2770.0], [84.9, 2785.0], [85.0, 2785.0], [85.1, 2785.0], [85.2, 2785.0], [85.3, 2785.0], [85.4, 2791.0], [85.5, 2791.0], [85.6, 2791.0], [85.7, 2791.0], [85.8, 2791.0], [85.9, 2802.0], [86.0, 2802.0], [86.1, 2802.0], [86.2, 2802.0], [86.3, 2802.0], [86.4, 2806.0], [86.5, 2806.0], [86.6, 2806.0], [86.7, 2806.0], [86.8, 2806.0], [86.9, 2806.0], [87.0, 2812.0], [87.1, 2812.0], [87.2, 2812.0], [87.3, 2812.0], [87.4, 2812.0], [87.5, 2814.0], [87.6, 2814.0], [87.7, 2814.0], [87.8, 2814.0], [87.9, 2814.0], [88.0, 2818.0], [88.1, 2818.0], [88.2, 2818.0], [88.3, 2818.0], [88.4, 2818.0], [88.5, 2823.0], [88.6, 2823.0], [88.7, 2823.0], [88.8, 2823.0], [88.9, 2823.0], [89.0, 2823.0], [89.1, 2841.0], [89.2, 2841.0], [89.3, 2841.0], [89.4, 2841.0], [89.5, 2841.0], [89.6, 2844.0], [89.7, 2844.0], [89.8, 2844.0], [89.9, 2844.0], [90.0, 2844.0], [90.1, 2845.0], [90.2, 2845.0], [90.3, 2845.0], [90.4, 2845.0], [90.5, 2845.0], [90.6, 2845.0], [90.7, 2845.0], [90.8, 2845.0], [90.9, 2845.0], [91.0, 2845.0], [91.1, 2847.0], [91.2, 2847.0], [91.3, 2847.0], [91.4, 2847.0], [91.5, 2847.0], [91.6, 2847.0], [91.7, 2849.0], [91.8, 2849.0], [91.9, 2849.0], [92.0, 2849.0], [92.1, 2849.0], [92.2, 2900.0], [92.3, 2900.0], [92.4, 2900.0], [92.5, 2900.0], [92.6, 2900.0], [92.7, 2907.0], [92.8, 2907.0], [92.9, 2907.0], [93.0, 2907.0], [93.1, 2907.0], [93.2, 2914.0], [93.3, 2914.0], [93.4, 2914.0], [93.5, 2914.0], [93.6, 2914.0], [93.7, 2914.0], [93.8, 2921.0], [93.9, 2921.0], [94.0, 2921.0], [94.1, 2921.0], [94.2, 2921.0], [94.3, 2927.0], [94.4, 2927.0], [94.5, 2927.0], [94.6, 2927.0], [94.7, 2927.0], [94.8, 3085.0], [94.9, 3085.0], [95.0, 3085.0], [95.1, 3085.0], [95.2, 3085.0], [95.3, 3094.0], [95.4, 3094.0], [95.5, 3094.0], [95.6, 3094.0], [95.7, 3094.0], [95.8, 3094.0], [95.9, 3233.0], [96.0, 3233.0], [96.1, 3233.0], [96.2, 3233.0], [96.3, 3233.0], [96.4, 3243.0], [96.5, 3243.0], [96.6, 3243.0], [96.7, 3243.0], [96.8, 3243.0], [96.9, 3734.0], [97.0, 3734.0], [97.1, 3734.0], [97.2, 3734.0], [97.3, 3734.0], [97.4, 4565.0], [97.5, 4565.0], [97.6, 4565.0], [97.7, 4565.0], [97.8, 4565.0], [97.9, 4565.0], [98.0, 4578.0], [98.1, 4578.0], [98.2, 4578.0], [98.3, 4578.0], [98.4, 4578.0], [98.5, 4692.0], [98.6, 4692.0], [98.7, 4692.0], [98.8, 4692.0], [98.9, 4692.0], [99.0, 4750.0], [99.1, 4750.0], [99.2, 4750.0], [99.3, 4750.0], [99.4, 4750.0], [99.5, 5095.0], [99.6, 5095.0], [99.7, 5095.0], [99.8, 5095.0], [99.9, 5095.0], [100.0, 5095.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 562.0], [0.1, 562.0], [0.2, 562.0], [0.3, 562.0], [0.4, 562.0], [0.5, 562.0], [0.6, 631.0], [0.7, 631.0], [0.8, 631.0], [0.9, 631.0], [1.0, 631.0], [1.1, 883.0], [1.2, 883.0], [1.3, 883.0], [1.4, 883.0], [1.5, 883.0], [1.6, 934.0], [1.7, 934.0], [1.8, 934.0], [1.9, 934.0], [2.0, 934.0], [2.1, 963.0], [2.2, 963.0], [2.3, 963.0], [2.4, 963.0], [2.5, 963.0], [2.6, 963.0], [2.7, 1420.0], [2.8, 1420.0], [2.9, 1420.0], [3.0, 1420.0], [3.1, 1420.0], [3.2, 1432.0], [3.3, 1432.0], [3.4, 1432.0], [3.5, 1432.0], [3.6, 1432.0], [3.7, 1537.0], [3.8, 1537.0], [3.9, 1537.0], [4.0, 1537.0], [4.1, 1537.0], [4.2, 1572.0], [4.3, 1572.0], [4.4, 1572.0], [4.5, 1572.0], [4.6, 1572.0], [4.7, 1572.0], [4.8, 1648.0], [4.9, 1648.0], [5.0, 1648.0], [5.1, 1648.0], [5.2, 1648.0], [5.3, 1718.0], [5.4, 1718.0], [5.5, 1718.0], [5.6, 1718.0], [5.7, 1718.0], [5.8, 1727.0], [5.9, 1727.0], [6.0, 1727.0], [6.1, 1727.0], [6.2, 1727.0], [6.3, 1732.0], [6.4, 1732.0], [6.5, 1732.0], [6.6, 1732.0], [6.7, 1732.0], [6.8, 1732.0], [6.9, 1761.0], [7.0, 1761.0], [7.1, 1761.0], [7.2, 1761.0], [7.3, 1761.0], [7.4, 1783.0], [7.5, 1783.0], [7.6, 1783.0], [7.7, 1783.0], [7.8, 1783.0], [7.9, 1809.0], [8.0, 1809.0], [8.1, 1809.0], [8.2, 1809.0], [8.3, 1809.0], [8.4, 1824.0], [8.5, 1824.0], [8.6, 1824.0], [8.7, 1824.0], [8.8, 1824.0], [8.9, 1824.0], [9.0, 1848.0], [9.1, 1848.0], [9.2, 1848.0], [9.3, 1848.0], [9.4, 1848.0], [9.5, 1859.0], [9.6, 1859.0], [9.7, 1859.0], [9.8, 1859.0], [9.9, 1859.0], [10.0, 1876.0], [10.1, 1876.0], [10.2, 1876.0], [10.3, 1876.0], [10.4, 1876.0], [10.5, 1876.0], [10.6, 1876.0], [10.7, 1876.0], [10.8, 1876.0], [10.9, 1876.0], [11.0, 1881.0], [11.1, 1881.0], [11.2, 1881.0], [11.3, 1881.0], [11.4, 1881.0], [11.5, 1881.0], [11.6, 1884.0], [11.7, 1884.0], [11.8, 1884.0], [11.9, 1884.0], [12.0, 1884.0], [12.1, 1884.0], [12.2, 1884.0], [12.3, 1884.0], [12.4, 1884.0], [12.5, 1884.0], [12.6, 1885.0], [12.7, 1885.0], [12.8, 1885.0], [12.9, 1885.0], [13.0, 1885.0], [13.1, 1893.0], [13.2, 1893.0], [13.3, 1893.0], [13.4, 1893.0], [13.5, 1893.0], [13.6, 1893.0], [13.7, 1898.0], [13.8, 1898.0], [13.9, 1898.0], [14.0, 1898.0], [14.1, 1898.0], [14.2, 1923.0], [14.3, 1923.0], [14.4, 1923.0], [14.5, 1923.0], [14.6, 1923.0], [14.7, 1936.0], [14.8, 1936.0], [14.9, 1936.0], [15.0, 1936.0], [15.1, 1936.0], [15.2, 1938.0], [15.3, 1938.0], [15.4, 1938.0], [15.5, 1938.0], [15.6, 1938.0], [15.7, 1938.0], [15.8, 1950.0], [15.9, 1950.0], [16.0, 1950.0], [16.1, 1950.0], [16.2, 1950.0], [16.3, 1968.0], [16.4, 1968.0], [16.5, 1968.0], [16.6, 1968.0], [16.7, 1968.0], [16.8, 1969.0], [16.9, 1969.0], [17.0, 1969.0], [17.1, 1969.0], [17.2, 1969.0], [17.3, 1981.0], [17.4, 1981.0], [17.5, 1981.0], [17.6, 1981.0], [17.7, 1981.0], [17.8, 1981.0], [17.9, 1987.0], [18.0, 1987.0], [18.1, 1987.0], [18.2, 1987.0], [18.3, 1987.0], [18.4, 1994.0], [18.5, 1994.0], [18.6, 1994.0], [18.7, 1994.0], [18.8, 1994.0], [18.9, 1996.0], [19.0, 1996.0], [19.1, 1996.0], [19.2, 1996.0], [19.3, 1996.0], [19.4, 1996.0], [19.5, 1996.0], [19.6, 1996.0], [19.7, 1996.0], [19.8, 1996.0], [19.9, 2000.0], [20.0, 2000.0], [20.1, 2000.0], [20.2, 2000.0], [20.3, 2000.0], [20.4, 2000.0], [20.5, 2006.0], [20.6, 2006.0], [20.7, 2006.0], [20.8, 2006.0], [20.9, 2006.0], [21.0, 2015.0], [21.1, 2015.0], [21.2, 2015.0], [21.3, 2015.0], [21.4, 2015.0], [21.5, 2015.0], [21.6, 2015.0], [21.7, 2015.0], [21.8, 2015.0], [21.9, 2015.0], [22.0, 2020.0], [22.1, 2020.0], [22.2, 2020.0], [22.3, 2020.0], [22.4, 2020.0], [22.5, 2020.0], [22.6, 2027.0], [22.7, 2027.0], [22.8, 2027.0], [22.9, 2027.0], [23.0, 2027.0], [23.1, 2039.0], [23.2, 2039.0], [23.3, 2039.0], [23.4, 2039.0], [23.5, 2039.0], [23.6, 2041.0], [23.7, 2041.0], [23.8, 2041.0], [23.9, 2041.0], [24.0, 2041.0], [24.1, 2041.0], [24.2, 2041.0], [24.3, 2041.0], [24.4, 2041.0], [24.5, 2041.0], [24.6, 2041.0], [24.7, 2045.0], [24.8, 2045.0], [24.9, 2045.0], [25.0, 2045.0], [25.1, 2045.0], [25.2, 2055.0], [25.3, 2055.0], [25.4, 2055.0], [25.5, 2055.0], [25.6, 2055.0], [25.7, 2074.0], [25.8, 2074.0], [25.9, 2074.0], [26.0, 2074.0], [26.1, 2074.0], [26.2, 2075.0], [26.3, 2075.0], [26.4, 2075.0], [26.5, 2075.0], [26.6, 2075.0], [26.7, 2075.0], [26.8, 2093.0], [26.9, 2093.0], [27.0, 2093.0], [27.1, 2093.0], [27.2, 2093.0], [27.3, 2101.0], [27.4, 2101.0], [27.5, 2101.0], [27.6, 2101.0], [27.7, 2101.0], [27.8, 2104.0], [27.9, 2104.0], [28.0, 2104.0], [28.1, 2104.0], [28.2, 2104.0], [28.3, 2105.0], [28.4, 2105.0], [28.5, 2105.0], [28.6, 2105.0], [28.7, 2105.0], [28.8, 2106.0], [28.9, 2106.0], [29.0, 2106.0], [29.1, 2106.0], [29.2, 2106.0], [29.3, 2106.0], [29.4, 2106.0], [29.5, 2106.0], [29.6, 2106.0], [29.7, 2106.0], [29.8, 2106.0], [29.9, 2114.0], [30.0, 2114.0], [30.1, 2114.0], [30.2, 2114.0], [30.3, 2114.0], [30.4, 2119.0], [30.5, 2119.0], [30.6, 2119.0], [30.7, 2119.0], [30.8, 2119.0], [30.9, 2125.0], [31.0, 2125.0], [31.1, 2125.0], [31.2, 2125.0], [31.3, 2125.0], [31.4, 2125.0], [31.5, 2125.0], [31.6, 2125.0], [31.7, 2125.0], [31.8, 2125.0], [31.9, 2125.0], [32.0, 2127.0], [32.1, 2127.0], [32.2, 2127.0], [32.3, 2127.0], [32.4, 2127.0], [32.5, 2128.0], [32.6, 2128.0], [32.7, 2128.0], [32.8, 2128.0], [32.9, 2128.0], [33.0, 2128.0], [33.1, 2128.0], [33.2, 2128.0], [33.3, 2128.0], [33.4, 2128.0], [33.5, 2128.0], [33.6, 2134.0], [33.7, 2134.0], [33.8, 2134.0], [33.9, 2134.0], [34.0, 2134.0], [34.1, 2138.0], [34.2, 2138.0], [34.3, 2138.0], [34.4, 2138.0], [34.5, 2138.0], [34.6, 2142.0], [34.7, 2142.0], [34.8, 2142.0], [34.9, 2142.0], [35.0, 2142.0], [35.1, 2145.0], [35.2, 2145.0], [35.3, 2145.0], [35.4, 2145.0], [35.5, 2145.0], [35.6, 2145.0], [35.7, 2159.0], [35.8, 2159.0], [35.9, 2159.0], [36.0, 2159.0], [36.1, 2159.0], [36.2, 2159.0], [36.3, 2159.0], [36.4, 2159.0], [36.5, 2159.0], [36.6, 2159.0], [36.7, 2161.0], [36.8, 2161.0], [36.9, 2161.0], [37.0, 2161.0], [37.1, 2161.0], [37.2, 2165.0], [37.3, 2165.0], [37.4, 2165.0], [37.5, 2165.0], [37.6, 2165.0], [37.7, 2166.0], [37.8, 2166.0], [37.9, 2166.0], [38.0, 2166.0], [38.1, 2166.0], [38.2, 2166.0], [38.3, 2169.0], [38.4, 2169.0], [38.5, 2169.0], [38.6, 2169.0], [38.7, 2169.0], [38.8, 2169.0], [38.9, 2169.0], [39.0, 2169.0], [39.1, 2169.0], [39.2, 2169.0], [39.3, 2179.0], [39.4, 2179.0], [39.5, 2179.0], [39.6, 2179.0], [39.7, 2179.0], [39.8, 2181.0], [39.9, 2181.0], [40.0, 2181.0], [40.1, 2181.0], [40.2, 2181.0], [40.3, 2181.0], [40.4, 2183.0], [40.5, 2183.0], [40.6, 2183.0], [40.7, 2183.0], [40.8, 2183.0], [40.9, 2186.0], [41.0, 2186.0], [41.1, 2186.0], [41.2, 2186.0], [41.3, 2186.0], [41.4, 2188.0], [41.5, 2188.0], [41.6, 2188.0], [41.7, 2188.0], [41.8, 2188.0], [41.9, 2194.0], [42.0, 2194.0], [42.1, 2194.0], [42.2, 2194.0], [42.3, 2194.0], [42.4, 2194.0], [42.5, 2196.0], [42.6, 2196.0], [42.7, 2196.0], [42.8, 2196.0], [42.9, 2196.0], [43.0, 2196.0], [43.1, 2196.0], [43.2, 2196.0], [43.3, 2196.0], [43.4, 2196.0], [43.5, 2206.0], [43.6, 2206.0], [43.7, 2206.0], [43.8, 2206.0], [43.9, 2206.0], [44.0, 2208.0], [44.1, 2208.0], [44.2, 2208.0], [44.3, 2208.0], [44.4, 2208.0], [44.5, 2208.0], [44.6, 2208.0], [44.7, 2208.0], [44.8, 2208.0], [44.9, 2208.0], [45.0, 2208.0], [45.1, 2213.0], [45.2, 2213.0], [45.3, 2213.0], [45.4, 2213.0], [45.5, 2213.0], [45.6, 2213.0], [45.7, 2213.0], [45.8, 2213.0], [45.9, 2213.0], [46.0, 2213.0], [46.1, 2215.0], [46.2, 2215.0], [46.3, 2215.0], [46.4, 2215.0], [46.5, 2215.0], [46.6, 2219.0], [46.7, 2219.0], [46.8, 2219.0], [46.9, 2219.0], [47.0, 2219.0], [47.1, 2219.0], [47.2, 2219.0], [47.3, 2219.0], [47.4, 2219.0], [47.5, 2219.0], [47.6, 2219.0], [47.7, 2227.0], [47.8, 2227.0], [47.9, 2227.0], [48.0, 2227.0], [48.1, 2227.0], [48.2, 2231.0], [48.3, 2231.0], [48.4, 2231.0], [48.5, 2231.0], [48.6, 2231.0], [48.7, 2232.0], [48.8, 2232.0], [48.9, 2232.0], [49.0, 2232.0], [49.1, 2232.0], [49.2, 2232.0], [49.3, 2235.0], [49.4, 2235.0], [49.5, 2235.0], [49.6, 2235.0], [49.7, 2235.0], [49.8, 2237.0], [49.9, 2237.0], [50.0, 2237.0], [50.1, 2237.0], [50.2, 2237.0], [50.3, 2258.0], [50.4, 2258.0], [50.5, 2258.0], [50.6, 2258.0], [50.7, 2258.0], [50.8, 2259.0], [50.9, 2259.0], [51.0, 2259.0], [51.1, 2259.0], [51.2, 2259.0], [51.3, 2259.0], [51.4, 2274.0], [51.5, 2274.0], [51.6, 2274.0], [51.7, 2274.0], [51.8, 2274.0], [51.9, 2281.0], [52.0, 2281.0], [52.1, 2281.0], [52.2, 2281.0], [52.3, 2281.0], [52.4, 2292.0], [52.5, 2292.0], [52.6, 2292.0], [52.7, 2292.0], [52.8, 2292.0], [52.9, 2294.0], [53.0, 2294.0], [53.1, 2294.0], [53.2, 2294.0], [53.3, 2294.0], [53.4, 2294.0], [53.5, 2295.0], [53.6, 2295.0], [53.7, 2295.0], [53.8, 2295.0], [53.9, 2295.0], [54.0, 2297.0], [54.1, 2297.0], [54.2, 2297.0], [54.3, 2297.0], [54.4, 2297.0], [54.5, 2299.0], [54.6, 2299.0], [54.7, 2299.0], [54.8, 2299.0], [54.9, 2299.0], [55.0, 2303.0], [55.1, 2303.0], [55.2, 2303.0], [55.3, 2303.0], [55.4, 2303.0], [55.5, 2304.0], [55.6, 2304.0], [55.7, 2304.0], [55.8, 2304.0], [55.9, 2304.0], [56.0, 2304.0], [56.1, 2306.0], [56.2, 2306.0], [56.3, 2306.0], [56.4, 2306.0], [56.5, 2306.0], [56.6, 2311.0], [56.7, 2311.0], [56.8, 2311.0], [56.9, 2311.0], [57.0, 2311.0], [57.1, 2318.0], [57.2, 2318.0], [57.3, 2318.0], [57.4, 2318.0], [57.5, 2318.0], [57.6, 2320.0], [57.7, 2320.0], [57.8, 2320.0], [57.9, 2320.0], [58.0, 2320.0], [58.1, 2320.0], [58.2, 2329.0], [58.3, 2329.0], [58.4, 2329.0], [58.5, 2329.0], [58.6, 2329.0], [58.7, 2330.0], [58.8, 2330.0], [58.9, 2330.0], [59.0, 2330.0], [59.1, 2330.0], [59.2, 2331.0], [59.3, 2331.0], [59.4, 2331.0], [59.5, 2331.0], [59.6, 2331.0], [59.7, 2331.0], [59.8, 2331.0], [59.9, 2331.0], [60.0, 2331.0], [60.1, 2331.0], [60.2, 2331.0], [60.3, 2333.0], [60.4, 2333.0], [60.5, 2333.0], [60.6, 2333.0], [60.7, 2333.0], [60.8, 2334.0], [60.9, 2334.0], [61.0, 2334.0], [61.1, 2334.0], [61.2, 2334.0], [61.3, 2336.0], [61.4, 2336.0], [61.5, 2336.0], [61.6, 2336.0], [61.7, 2336.0], [61.8, 2336.0], [61.9, 2336.0], [62.0, 2336.0], [62.1, 2336.0], [62.2, 2336.0], [62.3, 2336.0], [62.4, 2344.0], [62.5, 2344.0], [62.6, 2344.0], [62.7, 2344.0], [62.8, 2344.0], [62.9, 2348.0], [63.0, 2348.0], [63.1, 2348.0], [63.2, 2348.0], [63.3, 2348.0], [63.4, 2353.0], [63.5, 2353.0], [63.6, 2353.0], [63.7, 2353.0], [63.8, 2353.0], [63.9, 2353.0], [64.0, 2353.0], [64.1, 2353.0], [64.2, 2353.0], [64.3, 2353.0], [64.4, 2354.0], [64.5, 2354.0], [64.6, 2354.0], [64.7, 2354.0], [64.8, 2354.0], [64.9, 2354.0], [65.0, 2357.0], [65.1, 2357.0], [65.2, 2357.0], [65.3, 2357.0], [65.4, 2357.0], [65.5, 2375.0], [65.6, 2375.0], [65.7, 2375.0], [65.8, 2375.0], [65.9, 2375.0], [66.0, 2382.0], [66.1, 2382.0], [66.2, 2382.0], [66.3, 2382.0], [66.4, 2382.0], [66.5, 2402.0], [66.6, 2402.0], [66.7, 2402.0], [66.8, 2402.0], [66.9, 2402.0], [67.0, 2402.0], [67.1, 2403.0], [67.2, 2403.0], [67.3, 2403.0], [67.4, 2403.0], [67.5, 2403.0], [67.6, 2405.0], [67.7, 2405.0], [67.8, 2405.0], [67.9, 2405.0], [68.0, 2405.0], [68.1, 2412.0], [68.2, 2412.0], [68.3, 2412.0], [68.4, 2412.0], [68.5, 2412.0], [68.6, 2423.0], [68.7, 2423.0], [68.8, 2423.0], [68.9, 2423.0], [69.0, 2423.0], [69.1, 2423.0], [69.2, 2433.0], [69.3, 2433.0], [69.4, 2433.0], [69.5, 2433.0], [69.6, 2433.0], [69.7, 2444.0], [69.8, 2444.0], [69.9, 2444.0], [70.0, 2444.0], [70.1, 2444.0], [70.2, 2453.0], [70.3, 2453.0], [70.4, 2453.0], [70.5, 2453.0], [70.6, 2453.0], [70.7, 2454.0], [70.8, 2454.0], [70.9, 2454.0], [71.0, 2454.0], [71.1, 2454.0], [71.2, 2454.0], [71.3, 2459.0], [71.4, 2459.0], [71.5, 2459.0], [71.6, 2459.0], [71.7, 2459.0], [71.8, 2467.0], [71.9, 2467.0], [72.0, 2467.0], [72.1, 2467.0], [72.2, 2467.0], [72.3, 2476.0], [72.4, 2476.0], [72.5, 2476.0], [72.6, 2476.0], [72.7, 2476.0], [72.8, 2479.0], [72.9, 2479.0], [73.0, 2479.0], [73.1, 2479.0], [73.2, 2479.0], [73.3, 2483.0], [73.4, 2483.0], [73.5, 2483.0], [73.6, 2483.0], [73.7, 2483.0], [73.8, 2483.0], [73.9, 2487.0], [74.0, 2487.0], [74.1, 2487.0], [74.2, 2487.0], [74.3, 2487.0], [74.4, 2487.0], [74.5, 2487.0], [74.6, 2487.0], [74.7, 2487.0], [74.8, 2487.0], [74.9, 2487.0], [75.0, 2487.0], [75.1, 2487.0], [75.2, 2487.0], [75.3, 2487.0], [75.4, 2487.0], [75.5, 2487.0], [75.6, 2487.0], [75.7, 2487.0], [75.8, 2487.0], [75.9, 2487.0], [76.0, 2488.0], [76.1, 2488.0], [76.2, 2488.0], [76.3, 2488.0], [76.4, 2488.0], [76.5, 2488.0], [76.6, 2488.0], [76.7, 2488.0], [76.8, 2488.0], [76.9, 2488.0], [77.0, 2488.0], [77.1, 2488.0], [77.2, 2488.0], [77.3, 2488.0], [77.4, 2488.0], [77.5, 2488.0], [77.6, 2488.0], [77.7, 2488.0], [77.8, 2488.0], [77.9, 2488.0], [78.0, 2488.0], [78.1, 2490.0], [78.2, 2490.0], [78.3, 2490.0], [78.4, 2490.0], [78.5, 2490.0], [78.6, 2500.0], [78.7, 2500.0], [78.8, 2500.0], [78.9, 2500.0], [79.0, 2500.0], [79.1, 2501.0], [79.2, 2501.0], [79.3, 2501.0], [79.4, 2501.0], [79.5, 2501.0], [79.6, 2504.0], [79.7, 2504.0], [79.8, 2504.0], [79.9, 2504.0], [80.0, 2504.0], [80.1, 2504.0], [80.2, 2505.0], [80.3, 2505.0], [80.4, 2505.0], [80.5, 2505.0], [80.6, 2505.0], [80.7, 2510.0], [80.8, 2510.0], [80.9, 2510.0], [81.0, 2510.0], [81.1, 2510.0], [81.2, 2513.0], [81.3, 2513.0], [81.4, 2513.0], [81.5, 2513.0], [81.6, 2513.0], [81.7, 2513.0], [81.8, 2513.0], [81.9, 2513.0], [82.0, 2513.0], [82.1, 2513.0], [82.2, 2526.0], [82.3, 2526.0], [82.4, 2526.0], [82.5, 2526.0], [82.6, 2526.0], [82.7, 2526.0], [82.8, 2527.0], [82.9, 2527.0], [83.0, 2527.0], [83.1, 2527.0], [83.2, 2527.0], [83.3, 2530.0], [83.4, 2530.0], [83.5, 2530.0], [83.6, 2530.0], [83.7, 2530.0], [83.8, 2539.0], [83.9, 2539.0], [84.0, 2539.0], [84.1, 2539.0], [84.2, 2539.0], [84.3, 2548.0], [84.4, 2548.0], [84.5, 2548.0], [84.6, 2548.0], [84.7, 2548.0], [84.8, 2548.0], [84.9, 2560.0], [85.0, 2560.0], [85.1, 2560.0], [85.2, 2560.0], [85.3, 2560.0], [85.4, 2560.0], [85.5, 2560.0], [85.6, 2560.0], [85.7, 2560.0], [85.8, 2560.0], [85.9, 2567.0], [86.0, 2567.0], [86.1, 2567.0], [86.2, 2567.0], [86.3, 2567.0], [86.4, 2574.0], [86.5, 2574.0], [86.6, 2574.0], [86.7, 2574.0], [86.8, 2574.0], [86.9, 2574.0], [87.0, 2575.0], [87.1, 2575.0], [87.2, 2575.0], [87.3, 2575.0], [87.4, 2575.0], [87.5, 2582.0], [87.6, 2582.0], [87.7, 2582.0], [87.8, 2582.0], [87.9, 2582.0], [88.0, 2592.0], [88.1, 2592.0], [88.2, 2592.0], [88.3, 2592.0], [88.4, 2592.0], [88.5, 2598.0], [88.6, 2598.0], [88.7, 2598.0], [88.8, 2598.0], [88.9, 2598.0], [89.0, 2598.0], [89.1, 2616.0], [89.2, 2616.0], [89.3, 2616.0], [89.4, 2616.0], [89.5, 2616.0], [89.6, 2641.0], [89.7, 2641.0], [89.8, 2641.0], [89.9, 2641.0], [90.0, 2641.0], [90.1, 2641.0], [90.2, 2641.0], [90.3, 2641.0], [90.4, 2641.0], [90.5, 2641.0], [90.6, 2733.0], [90.7, 2733.0], [90.8, 2733.0], [90.9, 2733.0], [91.0, 2733.0], [91.1, 2787.0], [91.2, 2787.0], [91.3, 2787.0], [91.4, 2787.0], [91.5, 2787.0], [91.6, 2787.0], [91.7, 2792.0], [91.8, 2792.0], [91.9, 2792.0], [92.0, 2792.0], [92.1, 2792.0], [92.2, 2792.0], [92.3, 2792.0], [92.4, 2792.0], [92.5, 2792.0], [92.6, 2792.0], [92.7, 2813.0], [92.8, 2813.0], [92.9, 2813.0], [93.0, 2813.0], [93.1, 2813.0], [93.2, 2820.0], [93.3, 2820.0], [93.4, 2820.0], [93.5, 2820.0], [93.6, 2820.0], [93.7, 2820.0], [93.8, 2830.0], [93.9, 2830.0], [94.0, 2830.0], [94.1, 2830.0], [94.2, 2830.0], [94.3, 2839.0], [94.4, 2839.0], [94.5, 2839.0], [94.6, 2839.0], [94.7, 2839.0], [94.8, 2917.0], [94.9, 2917.0], [95.0, 2917.0], [95.1, 2917.0], [95.2, 2917.0], [95.3, 2962.0], [95.4, 2962.0], [95.5, 2962.0], [95.6, 2962.0], [95.7, 2962.0], [95.8, 2962.0], [95.9, 2984.0], [96.0, 2984.0], [96.1, 2984.0], [96.2, 2984.0], [96.3, 2984.0], [96.4, 3023.0], [96.5, 3023.0], [96.6, 3023.0], [96.7, 3023.0], [96.8, 3023.0], [96.9, 3024.0], [97.0, 3024.0], [97.1, 3024.0], [97.2, 3024.0], [97.3, 3024.0], [97.4, 3184.0], [97.5, 3184.0], [97.6, 3184.0], [97.7, 3184.0], [97.8, 3184.0], [97.9, 3184.0], [98.0, 3235.0], [98.1, 3235.0], [98.2, 3235.0], [98.3, 3235.0], [98.4, 3235.0], [98.5, 3820.0], [98.6, 3820.0], [98.7, 3820.0], [98.8, 3820.0], [98.9, 3820.0], [99.0, 4360.0], [99.1, 4360.0], [99.2, 4360.0], [99.3, 4360.0], [99.4, 4360.0], [99.5, 4636.0], [99.6, 4636.0], [99.7, 4636.0], [99.8, 4636.0], [99.9, 4636.0], [100.0, 4636.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 31.0, "series": [{"data": [[600.0, 9.0], [700.0, 11.0], [800.0, 3.0], [900.0, 4.0], [1000.0, 3.0], [1100.0, 6.0], [1200.0, 5.0], [1300.0, 5.0], [1400.0, 4.0], [1500.0, 8.0], [1600.0, 4.0], [100.0, 2.0], [1700.0, 11.0], [1800.0, 15.0], [1900.0, 24.0], [2000.0, 13.0], [2100.0, 8.0], [2300.0, 11.0], [2200.0, 5.0], [2400.0, 7.0], [2500.0, 14.0], [2600.0, 7.0], [2800.0, 2.0], [2700.0, 3.0], [200.0, 1.0], [3400.0, 1.0], [3800.0, 1.0], [4000.0, 2.0], [4200.0, 1.0], [300.0, 2.0], [4700.0, 1.0], [500.0, 7.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 6.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 3.0], [2800.0, 4.0], [2900.0, 4.0], [3000.0, 3.0], [3100.0, 4.0], [3200.0, 2.0], [3300.0, 5.0], [3400.0, 5.0], [3500.0, 4.0], [3600.0, 3.0], [3700.0, 3.0], [3800.0, 7.0], [3900.0, 3.0], [4000.0, 1.0], [4100.0, 2.0], [4200.0, 5.0], [4300.0, 3.0], [4600.0, 21.0], [4500.0, 12.0], [4400.0, 3.0], [4800.0, 17.0], [4700.0, 13.0], [5000.0, 7.0], [4900.0, 8.0], [5100.0, 6.0], [5200.0, 14.0], [5300.0, 4.0], [5400.0, 6.0], [5500.0, 7.0], [5600.0, 3.0], [5800.0, 2.0], [6000.0, 1.0], [6500.0, 1.0], [7100.0, 1.0], [7000.0, 1.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[600.0, 4.0], [700.0, 6.0], [800.0, 4.0], [900.0, 2.0], [1000.0, 3.0], [1100.0, 4.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 5.0], [1500.0, 2.0], [1600.0, 5.0], [1700.0, 9.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 8.0], [2100.0, 9.0], [2300.0, 6.0], [2200.0, 5.0], [2400.0, 11.0], [2500.0, 19.0], [2600.0, 24.0], [2700.0, 25.0], [2800.0, 12.0], [2900.0, 5.0], [3000.0, 2.0], [3200.0, 2.0], [3700.0, 1.0], [4500.0, 2.0], [4600.0, 1.0], [4700.0, 1.0], [5000.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[600.0, 1.0], [800.0, 1.0], [900.0, 2.0], [1400.0, 2.0], [1500.0, 2.0], [1600.0, 1.0], [1700.0, 5.0], [1800.0, 12.0], [1900.0, 11.0], [2000.0, 14.0], [2100.0, 31.0], [2200.0, 22.0], [2300.0, 22.0], [2400.0, 23.0], [2500.0, 20.0], [2600.0, 3.0], [2800.0, 4.0], [2700.0, 4.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 1.0], [3200.0, 1.0], [3800.0, 1.0], [4300.0, 1.0], [4600.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 666.0, "series": [{"data": [[0.0, 1.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 102.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 666.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 13.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 104.78005115089502, "minX": 1.64330388E12, "maxY": 104.78005115089502, "series": [{"data": [[1.64330388E12, 104.78005115089502]], "isOverall": false, "label": "CDI-J&J", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330388E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 35.0, "minX": 1.0, "maxY": 7111.0, "series": [{"data": [[66.0, 1167.7142857142858], [67.0, 1017.3333333333333], [68.0, 864.8], [69.0, 1132.0], [71.0, 1119.0], [72.0, 1017.25], [73.0, 1413.3333333333333], [74.0, 554.0], [75.0, 1209.3333333333333], [76.0, 1112.2], [77.0, 635.0], [79.0, 1136.0], [80.0, 668.0], [81.0, 1071.3333333333333], [82.0, 1117.5], [83.0, 1284.5], [84.0, 1061.8333333333333], [85.0, 612.5], [86.0, 721.5], [87.0, 584.0], [89.0, 589.0], [104.0, 2873.5], [105.0, 966.0], [107.0, 984.0], [113.0, 1109.0], [123.0, 2888.0], [120.0, 4220.0], [124.0, 1361.0], [126.0, 2764.3333333333335], [127.0, 2629.0], [125.0, 4090.0], [129.0, 2011.5], [130.0, 1492.0], [134.0, 2364.9375000000005], [133.0, 2537.0], [132.0, 2492.0], [131.0, 2615.5714285714284], [128.0, 2611.0], [137.0, 2270.3333333333335], [139.0, 1545.0], [142.0, 2293.3333333333335], [141.0, 2350.0], [140.0, 3122.5], [136.0, 2328.0], [144.0, 1701.0], [147.0, 1862.3333333333333], [148.0, 1726.0], [146.0, 2176.0], [154.0, 1805.5], [155.0, 1816.0], [157.0, 1736.0], [158.0, 1892.4], [159.0, 2051.25], [156.0, 2530.3333333333335], [152.0, 2154.0], [166.0, 2012.0], [165.0, 1966.0], [162.0, 2150.0], [161.0, 2292.0], [168.0, 2003.5], [169.0, 1949.0], [170.0, 1433.3333333333335], [171.0, 2029.0], [172.0, 1596.2], [173.0, 1307.3333333333335], [174.0, 1874.090909090909], [175.0, 1607.6], [176.0, 2004.0], [177.0, 1901.3333333333333], [178.0, 2015.5], [179.0, 2117.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[126.91999999999997, 1789.2200000000005]], "isOverall": false, "label": "Login-page-Aggregated", "isController": false}, {"data": [[2.0, 4844.0], [3.0, 6576.0], [4.0, 4352.0], [5.0, 7096.0], [6.0, 4127.0], [8.0, 4990.5], [9.0, 5197.0], [10.0, 4979.0], [11.0, 4980.0], [12.0, 4450.0], [13.0, 4970.0], [15.0, 4495.0], [18.0, 4912.666666666667], [19.0, 4797.0], [20.0, 4596.0], [21.0, 4313.0], [22.0, 5029.0], [23.0, 4560.0], [24.0, 4600.0], [26.0, 4644.5], [28.0, 4857.5], [29.0, 4647.0], [30.0, 4889.0], [31.0, 4265.0], [33.0, 4929.0], [32.0, 4659.0], [35.0, 4735.0], [34.0, 5871.0], [37.0, 4741.0], [36.0, 4603.0], [39.0, 4880.0], [38.0, 5339.0], [41.0, 4669.0], [40.0, 4489.0], [43.0, 5245.0], [42.0, 4689.0], [45.0, 4628.0], [44.0, 4691.0], [47.0, 5188.0], [46.0, 4440.0], [49.0, 7111.0], [48.0, 4883.0], [51.0, 4737.0], [50.0, 4958.0], [53.0, 4993.0], [52.0, 4621.0], [55.0, 4860.0], [54.0, 5550.0], [57.0, 5356.0], [56.0, 5011.0], [59.0, 4900.0], [58.0, 5236.0], [61.0, 5272.0], [60.0, 5212.0], [63.0, 5085.0], [62.0, 5196.0], [67.0, 5251.0], [66.0, 5049.0], [65.0, 5265.0], [64.0, 4839.0], [71.0, 5203.0], [70.0, 5121.0], [68.0, 5240.0], [75.0, 5345.0], [74.0, 5195.0], [72.0, 5295.0], [79.0, 5545.0], [78.0, 5312.5], [76.0, 5174.0], [83.0, 5282.0], [82.0, 5539.0], [80.0, 5464.0], [87.0, 5554.0], [86.0, 5571.0], [85.0, 5446.0], [84.0, 5475.0], [91.0, 5497.0], [90.0, 5542.0], [89.0, 5699.0], [88.0, 5639.0], [95.0, 4992.0], [94.0, 5147.0], [93.0, 5278.0], [92.0, 5464.0], [99.0, 4780.0], [98.0, 4876.0], [96.0, 4870.0], [103.0, 4603.0], [102.0, 4682.0], [101.0, 4735.0], [100.0, 4822.0], [107.0, 4834.0], [106.0, 4851.0], [105.0, 4549.0], [104.0, 4581.0], [111.0, 4853.0], [110.0, 4682.0], [109.0, 4854.0], [108.0, 4896.0], [115.0, 4567.0], [114.0, 4772.0], [113.0, 4725.0], [112.0, 4677.0], [119.0, 6081.0], [118.0, 4700.0], [117.0, 5004.0], [116.0, 4746.0], [123.0, 4620.5], [121.0, 4573.0], [120.0, 4680.0], [127.0, 2442.0], [126.0, 4629.0], [125.0, 4592.0], [124.0, 4691.0], [135.0, 4339.0], [134.0, 4732.0], [133.0, 4526.0], [132.0, 4632.0], [131.0, 4579.0], [130.0, 4759.0], [129.0, 2399.0], [128.0, 2398.0], [143.0, 3948.0], [142.0, 4090.0], [141.0, 4138.0], [140.0, 4238.0], [139.0, 4452.5], [137.0, 4297.0], [136.0, 4815.0], [150.0, 3839.0], [149.0, 3834.0], [148.0, 3830.0], [147.0, 3867.0], [146.0, 3861.0], [145.0, 3884.0], [144.0, 3991.0], [159.0, 1792.0], [158.0, 3616.0], [157.0, 3663.0], [156.0, 3643.0], [155.0, 3733.0], [154.0, 3962.0], [153.0, 3738.0], [152.0, 3830.0], [167.0, 3365.0], [166.0, 3404.0], [165.0, 3458.0], [164.0, 3516.5], [162.0, 3469.0], [161.0, 3559.0], [160.0, 3596.0], [170.0, 2932.0], [175.0, 2905.8], [174.0, 2887.5], [173.0, 35.0], [172.0, 3319.0], [171.0, 95.0], [169.0, 3361.0], [168.0, 3457.0], [176.0, 2862.8], [178.0, 3115.25], [179.0, 2145.0], [177.0, 74.0], [1.0, 4881.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[98.99000000000008, 4347.099999999999]], "isOverall": false, "label": "Home-Aggregated", "isController": false}, {"data": [[2.0, 2823.0], [3.0, 4692.0], [4.0, 2814.0], [5.0, 5095.0], [6.0, 2694.0], [8.0, 4242.0], [9.0, 4565.0], [10.0, 3085.0], [11.0, 2648.0], [12.0, 2802.0], [13.0, 3094.0], [15.0, 2435.5], [18.0, 3343.0], [19.0, 2921.0], [20.0, 2812.0], [21.0, 2741.0], [22.0, 2569.0], [23.0, 2735.0], [24.0, 2791.0], [26.0, 2731.5], [28.0, 2841.0], [29.0, 2914.0], [30.0, 2652.0], [31.0, 2845.0], [33.0, 2759.0], [32.0, 2662.0], [35.0, 2526.0], [34.0, 2847.0], [37.0, 2575.0], [36.0, 2478.0], [39.0, 2644.0], [38.0, 3233.0], [41.0, 2770.0], [40.0, 2550.0], [43.0, 2604.0], [42.0, 2564.0], [45.0, 2705.0], [44.0, 2494.0], [47.0, 2701.0], [46.0, 2678.0], [49.0, 2475.0], [48.0, 2478.0], [51.0, 2576.0], [50.0, 2655.0], [53.0, 2693.0], [52.0, 2578.0], [55.0, 2646.0], [54.0, 3243.0], [57.0, 2845.0], [56.0, 2678.0], [59.0, 2668.0], [58.0, 2900.0], [61.0, 2849.0], [60.0, 2706.0], [63.0, 2618.0], [62.0, 2695.0], [67.0, 2907.0], [66.0, 2728.0], [65.0, 2704.0], [64.0, 2508.0], [71.0, 2628.0], [70.0, 2671.0], [68.0, 2727.0], [75.0, 2769.0], [74.0, 2755.5], [72.0, 2806.0], [79.0, 2627.0], [78.0, 2803.5], [76.0, 2721.0], [83.0, 2742.0], [82.0, 2631.0], [80.0, 2731.0], [87.0, 2724.0], [86.0, 2750.0], [85.0, 2659.0], [84.0, 2683.0], [91.0, 2683.0], [90.0, 2702.0], [89.0, 2514.0], [88.0, 2655.0], [95.0, 2538.0], [94.0, 2599.0], [93.0, 2679.0], [92.0, 2501.0], [99.0, 2449.0], [98.0, 2386.5], [96.0, 2517.0], [103.0, 2284.0], [102.0, 2385.0], [101.0, 2439.0], [100.0, 2487.0], [107.0, 2477.0], [106.0, 2406.0], [105.0, 2316.0], [104.0, 2321.0], [111.0, 2419.0], [110.0, 2423.0], [109.0, 2506.0], [108.0, 2566.0], [115.0, 2184.0], [114.0, 2284.0], [113.0, 2322.0], [112.0, 2365.0], [119.0, 1720.0], [118.0, 2174.0], [117.0, 2516.0], [116.0, 2186.0], [123.0, 2113.0], [121.0, 2084.0], [120.0, 2064.0], [126.0, 2140.0], [125.0, 2101.0], [124.0, 2098.0], [135.0, 2123.0], [134.0, 2248.0], [133.0, 2021.0], [132.0, 2049.0], [131.0, 2052.0], [130.0, 2191.0], [143.0, 1751.0], [142.0, 1816.0], [141.0, 1762.0], [140.0, 1945.0], [139.0, 1432.0], [137.0, 2163.0], [136.0, 2335.0], [150.0, 1711.0], [149.0, 1652.0], [148.0, 1688.0], [147.0, 1707.0], [146.0, 1716.0], [145.0, 1745.0], [144.0, 1709.0], [159.0, 1524.0], [158.0, 1449.0], [157.0, 1454.0], [156.0, 1538.0], [155.0, 1614.0], [154.0, 1934.0], [153.0, 1644.0], [152.0, 1681.0], [167.0, 1397.0], [166.0, 1416.0], [165.0, 1463.0], [164.0, 1242.0], [162.0, 1424.0], [161.0, 1375.0], [160.0, 1382.0], [170.0, 982.5], [175.0, 793.8], [174.0, 846.8333333333334], [172.0, 1243.0], [169.0, 1233.0], [168.0, 1103.0], [176.0, 776.6], [178.0, 1032.0], [179.0, 1107.0], [1.0, 2841.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[96.21989528795814, 2248.8010471204193]], "isOverall": false, "label": "Home-0-Aggregated", "isController": false}, {"data": [[2.0, 2020.0], [3.0, 1884.0], [4.0, 1537.0], [5.0, 2000.0], [6.0, 1432.0], [8.0, 748.0], [9.0, 631.0], [10.0, 1893.0], [11.0, 2331.0], [12.0, 1648.0], [13.0, 1876.0], [15.0, 2059.0], [18.0, 1568.6666666666667], [19.0, 1876.0], [20.0, 1783.0], [21.0, 1572.0], [22.0, 2459.0], [23.0, 1824.0], [24.0, 1809.0], [26.0, 1912.0], [28.0, 2015.5], [29.0, 1732.0], [30.0, 2237.0], [31.0, 1420.0], [33.0, 2169.0], [32.0, 1996.0], [35.0, 2208.0], [34.0, 3024.0], [37.0, 2165.0], [36.0, 2125.0], [39.0, 2235.0], [38.0, 2106.0], [41.0, 1898.0], [40.0, 1938.0], [43.0, 2641.0], [42.0, 2125.0], [45.0, 1923.0], [44.0, 2196.0], [47.0, 2487.0], [46.0, 1761.0], [49.0, 4636.0], [48.0, 2405.0], [51.0, 2161.0], [50.0, 2303.0], [53.0, 2299.0], [52.0, 2041.0], [55.0, 2213.0], [54.0, 2306.0], [57.0, 2510.0], [56.0, 2333.0], [59.0, 2231.0], [58.0, 2336.0], [61.0, 2423.0], [60.0, 2505.0], [63.0, 2467.0], [62.0, 2500.0], [67.0, 2344.0], [66.0, 2320.0], [65.0, 2560.0], [64.0, 2331.0], [71.0, 2574.0], [70.0, 2450.0], [68.0, 2513.0], [75.0, 2575.0], [74.0, 2439.0], [72.0, 2488.0], [79.0, 2917.0], [78.0, 2508.5], [76.0, 2453.0], [83.0, 2539.0], [82.0, 2907.5], [80.0, 2733.0], [87.0, 2830.0], [86.0, 2820.0], [85.0, 2787.0], [84.0, 2792.0], [91.0, 2813.0], [90.0, 2839.0], [89.0, 3184.0], [88.0, 2984.0], [95.0, 2454.0], [94.0, 2548.0], [93.0, 2598.0], [92.0, 2962.0], [99.0, 2330.0], [98.0, 2488.5], [96.0, 2353.0], [103.0, 2318.0], [102.0, 2297.0], [101.0, 2295.0], [100.0, 2334.0], [107.0, 2357.0], [106.0, 2444.0], [105.0, 2232.0], [104.0, 2259.0], [111.0, 2433.0], [110.0, 2258.0], [109.0, 2348.0], [108.0, 2329.0], [115.0, 2382.0], [114.0, 2487.0], [113.0, 2403.0], [112.0, 2311.0], [119.0, 4360.0], [118.0, 2526.0], [117.0, 2487.0], [116.0, 2560.0], [123.0, 2507.0], [121.0, 2488.0], [120.0, 2616.0], [126.0, 2488.0], [125.0, 2490.0], [124.0, 2592.0], [135.0, 2215.0], [134.0, 2483.0], [133.0, 2504.0], [132.0, 2582.0], [131.0, 2527.0], [130.0, 2567.0], [143.0, 2196.0], [142.0, 2274.0], [141.0, 2375.0], [140.0, 2292.0], [139.0, 3019.5], [137.0, 2134.0], [136.0, 2479.0], [150.0, 2128.0], [149.0, 2181.0], [148.0, 2142.0], [147.0, 2159.0], [146.0, 2145.0], [145.0, 2138.0], [144.0, 2281.0], [159.0, 2015.0], [158.0, 2166.0], [157.0, 2208.0], [156.0, 2104.0], [155.0, 2119.0], [154.0, 2027.0], [153.0, 2093.0], [152.0, 2148.5], [167.0, 1968.0], [166.0, 1987.0], [165.0, 1994.0], [164.0, 2273.5], [162.0, 2045.0], [161.0, 2183.0], [160.0, 2213.0], [170.0, 1948.0], [175.0, 2111.0], [174.0, 2039.8333333333333], [172.0, 2075.0], [169.0, 2127.0], [168.0, 2354.0], [176.0, 2085.2], [178.0, 2082.5], [179.0, 2084.5], [1.0, 2039.0]], "isOverall": false, "label": "Home-1", "isController": false}, {"data": [[96.21989528795814, 2262.607329842931]], "isOverall": false, "label": "Home-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 179.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10133.85, "minX": 1.64330388E12, "maxY": 701033.05, "series": [{"data": [[1.64330388E12, 701033.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64330388E12, 10133.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330388E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1789.2200000000005, "minX": 1.64330388E12, "maxY": 4347.099999999999, "series": [{"data": [[1.64330388E12, 1789.2200000000005]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330388E12, 4347.099999999999]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330388E12, 2248.8010471204193]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330388E12, 2262.607329842931]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330388E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1744.3750000000005, "minX": 1.64330388E12, "maxY": 2248.75392670157, "series": [{"data": [[1.64330388E12, 1744.3750000000005]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330388E12, 2184.7200000000003]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330388E12, 2248.75392670157]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330388E12, 2006.3926701570695]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330388E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64330388E12, "maxY": 300.1649999999999, "series": [{"data": [[1.64330388E12, 300.1649999999999]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330388E12, 0.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330388E12, 0.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330388E12, 0.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330388E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 375.0, "minX": 1.64330388E12, "maxY": 7111.0, "series": [{"data": [[1.64330388E12, 7111.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64330388E12, 4834.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64330388E12, 5688.499999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64330388E12, 5216.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64330388E12, 375.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64330388E12, 2444.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330388E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 44.0, "minX": 2.0, "maxY": 2915.5, "series": [{"data": [[2.0, 1391.0], [66.0, 2567.0], [71.0, 1897.5], [74.0, 2915.5], [77.0, 1877.0], [39.0, 1375.0], [79.0, 2365.0], [114.0, 2108.0], [59.0, 2646.0], [62.0, 2766.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[66.0, 2399.0], [71.0, 44.0], [114.0, 95.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 114.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 44.0, "minX": 2.0, "maxY": 2691.5, "series": [{"data": [[2.0, 1365.0], [66.0, 2514.0], [71.0, 1755.5], [74.0, 2691.5], [77.0, 1641.0], [39.0, 1375.0], [79.0, 2123.0], [114.0, 1880.0], [59.0, 2509.0], [62.0, 2473.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[66.0, 2342.0], [71.0, 44.0], [114.0, 95.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 114.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.033333333333333, "minX": 1.64330388E12, "maxY": 13.033333333333333, "series": [{"data": [[1.64330388E12, 13.033333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330388E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.64330388E12, "maxY": 9.633333333333333, "series": [{"data": [[1.64330388E12, 9.633333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64330388E12, 3.183333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.64330388E12, 0.16666666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.64330388E12, 0.05]], "isOverall": false, "label": "419", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330388E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.64330388E12, "maxY": 3.2666666666666666, "series": [{"data": [[1.64330388E12, 3.183333333333333]], "isOverall": false, "label": "Home-1-success", "isController": false}, {"data": [[1.64330388E12, 0.06666666666666667]], "isOverall": false, "label": "Login-page-failure", "isController": false}, {"data": [[1.64330388E12, 3.2666666666666666]], "isOverall": false, "label": "Login-page-success", "isController": false}, {"data": [[1.64330388E12, 0.15]], "isOverall": false, "label": "Home-failure", "isController": false}, {"data": [[1.64330388E12, 3.183333333333333]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.64330388E12, 3.183333333333333]], "isOverall": false, "label": "Home-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330388E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.64330388E12, "maxY": 12.816666666666666, "series": [{"data": [[1.64330388E12, 12.816666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64330388E12, 0.21666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330388E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

